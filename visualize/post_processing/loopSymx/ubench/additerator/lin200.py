#!/usr/bin/python

from z3 import *

def IntArr(prefix, sz, N):
  """Create a vector with N Bit-Vectors of size sz"""
  return [ BitVec('%s__%s' % (prefix, i), sz) for i in range(N) ]

def get_var_name(**kwargs): return kwargs.keys()[0]



def getElement(arr , idx, name1, name2, name3):
    #if type(idx) is int:
    #    return arr[idx]
#    name = name1+name2
#    symVar = Int(name)
    symVar = Int(name3)
    return symVar

def indexCheck(lhs, lhsName):
    #if type(lhs) is int:
    #    return ''
    #else:
    lhs  = Int(lhsName)
    #s.add(lhs ==rhs)
    s.add(lhs >= 0)

def getZ3VariableFromString(s, varString):
    if(s.check() != z3.sat):
        return None
    m = s.model()
    for c in m.decls():
        n = c.name()
        if n == varString:
            return c
    assert (0), "z3 String varString does not exist"

def addArrayConstraints(s):
    m = s.model()
    idxList = []
    arrList = []
    for c in m.decls():
        n = c.name()
        if n.count('t') == 2:
            print "#array element ", n, m[c]
            idx =  n[n.rfind("t"): len(n) ]
            print "#index taint = ", idx
            idxList.append(idx)
            arrList.append(n)
    print "#arrList = ", arrList
    print "#idxList = ", idxList
    for i in range(len(arrList)):
        obj_i_name = arrList[i]
        taint_i_name = obj_i_name[obj_i_name.rfind("t"): len(obj_i_name)]
        #obj_i = getZ3VariableFromString(s,obj_i_name)
        obj_i = get_var_name(obj_i_name=obj_i_name)
        #taint_i = getZ3VariableFromString(s,taint_i_name)
        taint_i = get_var_name(taint_i_name=taint_i_name)
        if obj_i is None or taint_i is None:
            print "#either obj_i ", obj_i_name, " or taint_i ", taint_i_name, " did not get instantiated" 
            return None
        for j in range(len(arrList)):
            if(i == j):
                continue
            obj_j_name = arrList[j]
            taint_j_name = obj_j_name[obj_j_name.rfind("t"): len(obj_j_name)]
            #obj_j = getZ3VariableFromString(s,obj_j_name)
            obj_j = get_var_name(obj_j_name=obj_j_name)
            #taint_j = getZ3VariableFromString(s,taint_j_name)
            taint_j = get_var_name(taint_j_name=taint_j_name)
            if obj_j is None or taint_j is None:
                print "#either obj_j ", obj_j_name, " or taint_j ", taint_j_name, " did not get instantiated"
                return None
            print "====BEFORE ADDING CONSTRAINT==="
            for c in s.assertions():
	        print c
            new_s = Solver()
            new_s = s
            new_s.add(Implies(obj_i != obj_j , taint_i != taint_j))
            print "====AFTER ADDING CONSTRAINT==="
            for c in new_s.assertions():
	        print c
            s = new_s
#            if(obj_i != obj_j):
#                print "#obj_i ", obj_i_name," obj_j ", obj_j_name, " are not equal"
#                print "adding constraint, i != j for taints ", taint_i_name, " and ", taint_j_name 
#         #       s.push()
#                print "====BEFORE ADDING CONSTRAINT==="
#            	for c in s.assertions():
#		    print c
#                s.add((taint_i != taint_j))
#                print "===AFTER ADDING CONSTRAINT==="
#            	for c in s.assertions():
#		    print c
#                if s.check() == z3.unsat:
#                    return None
#                #else:
#                #    print s.model()
    return s

def CharArr(prefix, sz, N):
  """Create a vector with N Bit-Vectors of size sz"""
  return [ BitVec('%s__%s' % (prefix, i), sz) for i in range(N) ]

def CharArr2D(prefix):
    return [[]]

def extendList(var, num, prefix):
    listSize = len(var)
    if num - listSize > 0:
        incrementSize = num-listSize
        for val in range(incrementSize):
            var.append( BitVec('%s__%s' % (prefix, listSize + val), 32))

def BitVectorToInt(var):
    if type(var) is int:    # if already int dont do anything
        return
    elif is_bv(var) and var.size() == 32: # if bitvector is int of size
        # 32, then return Integer equavalent
        ctx = var.ctx
        return ArithRef(Z3_mk_bv2int(ctx.ref(), var.as_ast(), 0), ctx)
    else:       # if bitvector is that of char, return as is
            # since all character operations happen on bitvector
        return var

def ConstIntArr(var, size):
#  	return [ BitVec('%s__%s' % (var, i), 32) for i in range(size) ]
    return []

def indexSanitizer(index, arrSize, s):
	s.push()
	s.add(index < 0)
	if(s.check() == z3.sat):
		print "NEGATIVE INDEX POSSIBLE"
		print (s.model())
	s.pop()
	
	s.push()
	s.add(index >= arrSize)
	if(s.check() == z3.sat):
		print "OVERFLOW INDEX POSSIBLE"
		print (s.model())
	s.pop()

	s.push()
	s.add(index >=0 , index < arrSize)
	if(s.check() != z3.sat):
		print "VALID ARRAY INDEX NOT POSSIBLE"
		s.pop()
		return -1
	else:
		index = s.model()[index]
		return index

set_param('smt.bv.enable_int2bv',True)

s = Solver()


counter1 =Int('counter1')
op1 =Int('op1')
s.add(counter1 >= 0)
s.add(counter1 <= 1)
s.add(op1 == 1)
counter2 =Int('counter2')
op2 =Int('op2')
s.add(counter2 >= 0)
s.add(counter2 <= 1)
s.add(op2 == 2)
counter3 =Int('counter3')
op3 =Int('op3')
s.add(counter3 >= 0)
s.add(counter3 <= 1)
s.add(op3 == 3)
counter4 =Int('counter4')
op4 =Int('op4')
s.add(counter4 >= 0)
s.add(counter4 <= 1)
s.add(op4 == 4)
counter5 =Int('counter5')
op5 =Int('op5')
s.add(counter5 >= 0)
s.add(counter5 <= 1)
s.add(op5 == 5)
counter6 =Int('counter6')
op6 =Int('op6')
s.add(counter6 >= 0)
s.add(counter6 <= 1)
s.add(op6 == 6)
counter7 =Int('counter7')
op7 =Int('op7')
s.add(counter7 >= 0)
s.add(counter7 <= 1)
s.add(op7 == 7)
counter8 =Int('counter8')
op8 =Int('op8')
s.add(counter8 >= 0)
s.add(counter8 <= 1)
s.add(op8 == 8)
counter9 =Int('counter9')
op9 =Int('op9')
s.add(counter9 >= 0)
s.add(counter9 <= 1)
s.add(op9 == 9)
counter10 =Int('counter10')
op10 =Int('op10')
s.add(counter10 >= 0)
s.add(counter10 <= 1)
s.add(op10 == 10)
counter11 =Int('counter11')
op11 =Int('op11')
s.add(counter11 >= 0)
s.add(counter11 <= 1)
s.add(op11 == 11)
counter12 =Int('counter12')
op12 =Int('op12')
s.add(counter12 >= 0)
s.add(counter12 <= 1)
s.add(op12 == 12)
counter13 =Int('counter13')
op13 =Int('op13')
s.add(counter13 >= 0)
s.add(counter13 <= 1)
s.add(op13 == 13)
counter14 =Int('counter14')
op14 =Int('op14')
s.add(counter14 >= 0)
s.add(counter14 <= 1)
s.add(op14 == 14)
counter15 =Int('counter15')
op15 =Int('op15')
s.add(counter15 >= 0)
s.add(counter15 <= 1)
s.add(op15 == 15)
counter16 =Int('counter16')
op16 =Int('op16')
s.add(counter16 >= 0)
s.add(counter16 <= 1)
s.add(op16 == 16)
counter17 =Int('counter17')
op17 =Int('op17')
s.add(counter17 >= 0)
s.add(counter17 <= 1)
s.add(op17 == 17)
counter18 =Int('counter18')
op18 =Int('op18')
s.add(counter18 >= 0)
s.add(counter18 <= 1)
s.add(op18 == 18)
counter19 =Int('counter19')
op19 =Int('op19')
s.add(counter19 >= 0)
s.add(counter19 <= 1)
s.add(op19 == 19)
counter20 =Int('counter20')
op20 =Int('op20')
s.add(counter20 >= 0)
s.add(counter20 <= 1)
s.add(op20 == 20)
counter21 =Int('counter21')
op21 =Int('op21')
s.add(counter21 >= 0)
s.add(counter21 <= 1)
s.add(op21 == 21)
counter22 =Int('counter22')
op22 =Int('op22')
s.add(counter22 >= 0)
s.add(counter22 <= 1)
s.add(op22 == 22)
counter23 =Int('counter23')
op23 =Int('op23')
s.add(counter23 >= 0)
s.add(counter23 <= 1)
s.add(op23 == 23)
counter24 =Int('counter24')
op24 =Int('op24')
s.add(counter24 >= 0)
s.add(counter24 <= 1)
s.add(op24 == 24)
counter25 =Int('counter25')
op25 =Int('op25')
s.add(counter25 >= 0)
s.add(counter25 <= 1)
s.add(op25 == 25)
counter26 =Int('counter26')
op26 =Int('op26')
s.add(counter26 >= 0)
s.add(counter26 <= 1)
s.add(op26 == 26)
counter27 =Int('counter27')
op27 =Int('op27')
s.add(counter27 >= 0)
s.add(counter27 <= 1)
s.add(op27 == 27)
counter28 =Int('counter28')
op28 =Int('op28')
s.add(counter28 >= 0)
s.add(counter28 <= 1)
s.add(op28 == 28)
counter29 =Int('counter29')
op29 =Int('op29')
s.add(counter29 >= 0)
s.add(counter29 <= 1)
s.add(op29 == 29)
counter30 =Int('counter30')
op30 =Int('op30')
s.add(counter30 >= 0)
s.add(counter30 <= 1)
s.add(op30 == 30)
counter31 =Int('counter31')
op31 =Int('op31')
s.add(counter31 >= 0)
s.add(counter31 <= 1)
s.add(op31 == 31)
counter32 =Int('counter32')
op32 =Int('op32')
s.add(counter32 >= 0)
s.add(counter32 <= 1)
s.add(op32 == 32)
counter33 =Int('counter33')
op33 =Int('op33')
s.add(counter33 >= 0)
s.add(counter33 <= 1)
s.add(op33 == 33)
counter34 =Int('counter34')
op34 =Int('op34')
s.add(counter34 >= 0)
s.add(counter34 <= 1)
s.add(op34 == 34)
counter35 =Int('counter35')
op35 =Int('op35')
s.add(counter35 >= 0)
s.add(counter35 <= 1)
s.add(op35 == 35)
counter36 =Int('counter36')
op36 =Int('op36')
s.add(counter36 >= 0)
s.add(counter36 <= 1)
s.add(op36 == 36)
counter37 =Int('counter37')
op37 =Int('op37')
s.add(counter37 >= 0)
s.add(counter37 <= 1)
s.add(op37 == 37)
counter38 =Int('counter38')
op38 =Int('op38')
s.add(counter38 >= 0)
s.add(counter38 <= 1)
s.add(op38 == 38)
counter39 =Int('counter39')
op39 =Int('op39')
s.add(counter39 >= 0)
s.add(counter39 <= 1)
s.add(op39 == 39)
counter40 =Int('counter40')
op40 =Int('op40')
s.add(counter40 >= 0)
s.add(counter40 <= 1)
s.add(op40 == 40)
counter41 =Int('counter41')
op41 =Int('op41')
s.add(counter41 >= 0)
s.add(counter41 <= 1)
s.add(op41 == 41)
counter42 =Int('counter42')
op42 =Int('op42')
s.add(counter42 >= 0)
s.add(counter42 <= 1)
s.add(op42 == 42)
counter43 =Int('counter43')
op43 =Int('op43')
s.add(counter43 >= 0)
s.add(counter43 <= 1)
s.add(op43 == 43)
counter44 =Int('counter44')
op44 =Int('op44')
s.add(counter44 >= 0)
s.add(counter44 <= 1)
s.add(op44 == 44)
counter45 =Int('counter45')
op45 =Int('op45')
s.add(counter45 >= 0)
s.add(counter45 <= 1)
s.add(op45 == 45)
counter46 =Int('counter46')
op46 =Int('op46')
s.add(counter46 >= 0)
s.add(counter46 <= 1)
s.add(op46 == 46)
counter47 =Int('counter47')
op47 =Int('op47')
s.add(counter47 >= 0)
s.add(counter47 <= 1)
s.add(op47 == 47)
counter48 =Int('counter48')
op48 =Int('op48')
s.add(counter48 >= 0)
s.add(counter48 <= 1)
s.add(op48 == 48)
counter49 =Int('counter49')
op49 =Int('op49')
s.add(counter49 >= 0)
s.add(counter49 <= 1)
s.add(op49 == 49)
counter50 =Int('counter50')
op50 =Int('op50')
s.add(counter50 >= 0)
s.add(counter50 <= 1)
s.add(op50 == 50)
counter51 =Int('counter51')
op51 =Int('op51')
s.add(counter51 >= 0)
s.add(counter51 <= 1)
s.add(op51 == 51)
counter52 =Int('counter52')
op52 =Int('op52')
s.add(counter52 >= 0)
s.add(counter52 <= 1)
s.add(op52 == 52)
counter53 =Int('counter53')
op53 =Int('op53')
s.add(counter53 >= 0)
s.add(counter53 <= 1)
s.add(op53 == 53)
counter54 =Int('counter54')
op54 =Int('op54')
s.add(counter54 >= 0)
s.add(counter54 <= 1)
s.add(op54 == 54)
counter55 =Int('counter55')
op55 =Int('op55')
s.add(counter55 >= 0)
s.add(counter55 <= 1)
s.add(op55 == 55)
counter56 =Int('counter56')
op56 =Int('op56')
s.add(counter56 >= 0)
s.add(counter56 <= 1)
s.add(op56 == 56)
counter57 =Int('counter57')
op57 =Int('op57')
s.add(counter57 >= 0)
s.add(counter57 <= 1)
s.add(op57 == 57)
counter58 =Int('counter58')
op58 =Int('op58')
s.add(counter58 >= 0)
s.add(counter58 <= 1)
s.add(op58 == 58)
counter59 =Int('counter59')
op59 =Int('op59')
s.add(counter59 >= 0)
s.add(counter59 <= 1)
s.add(op59 == 59)
counter60 =Int('counter60')
op60 =Int('op60')
s.add(counter60 >= 0)
s.add(counter60 <= 1)
s.add(op60 == 60)
counter61 =Int('counter61')
op61 =Int('op61')
s.add(counter61 >= 0)
s.add(counter61 <= 1)
s.add(op61 == 61)
counter62 =Int('counter62')
op62 =Int('op62')
s.add(counter62 >= 0)
s.add(counter62 <= 1)
s.add(op62 == 62)
counter63 =Int('counter63')
op63 =Int('op63')
s.add(counter63 >= 0)
s.add(counter63 <= 1)
s.add(op63 == 63)
counter64 =Int('counter64')
op64 =Int('op64')
s.add(counter64 >= 0)
s.add(counter64 <= 1)
s.add(op64 == 64)
counter65 =Int('counter65')
op65 =Int('op65')
s.add(counter65 >= 0)
s.add(counter65 <= 1)
s.add(op65 == 65)
counter66 =Int('counter66')
op66 =Int('op66')
s.add(counter66 >= 0)
s.add(counter66 <= 1)
s.add(op66 == 66)
counter67 =Int('counter67')
op67 =Int('op67')
s.add(counter67 >= 0)
s.add(counter67 <= 1)
s.add(op67 == 67)
counter68 =Int('counter68')
op68 =Int('op68')
s.add(counter68 >= 0)
s.add(counter68 <= 1)
s.add(op68 == 68)
counter69 =Int('counter69')
op69 =Int('op69')
s.add(counter69 >= 0)
s.add(counter69 <= 1)
s.add(op69 == 69)
counter70 =Int('counter70')
op70 =Int('op70')
s.add(counter70 >= 0)
s.add(counter70 <= 1)
s.add(op70 == 70)
counter71 =Int('counter71')
op71 =Int('op71')
s.add(counter71 >= 0)
s.add(counter71 <= 1)
s.add(op71 == 71)
counter72 =Int('counter72')
op72 =Int('op72')
s.add(counter72 >= 0)
s.add(counter72 <= 1)
s.add(op72 == 72)
counter73 =Int('counter73')
op73 =Int('op73')
s.add(counter73 >= 0)
s.add(counter73 <= 1)
s.add(op73 == 73)
counter74 =Int('counter74')
op74 =Int('op74')
s.add(counter74 >= 0)
s.add(counter74 <= 1)
s.add(op74 == 74)
counter75 =Int('counter75')
op75 =Int('op75')
s.add(counter75 >= 0)
s.add(counter75 <= 1)
s.add(op75 == 75)
counter76 =Int('counter76')
op76 =Int('op76')
s.add(counter76 >= 0)
s.add(counter76 <= 1)
s.add(op76 == 76)
counter77 =Int('counter77')
op77 =Int('op77')
s.add(counter77 >= 0)
s.add(counter77 <= 1)
s.add(op77 == 77)
counter78 =Int('counter78')
op78 =Int('op78')
s.add(counter78 >= 0)
s.add(counter78 <= 1)
s.add(op78 == 78)
counter79 =Int('counter79')
op79 =Int('op79')
s.add(counter79 >= 0)
s.add(counter79 <= 1)
s.add(op79 == 79)
counter80 =Int('counter80')
op80 =Int('op80')
s.add(counter80 >= 0)
s.add(counter80 <= 1)
s.add(op80 == 80)
counter81 =Int('counter81')
op81 =Int('op81')
s.add(counter81 >= 0)
s.add(counter81 <= 1)
s.add(op81 == 81)
counter82 =Int('counter82')
op82 =Int('op82')
s.add(counter82 >= 0)
s.add(counter82 <= 1)
s.add(op82 == 82)
counter83 =Int('counter83')
op83 =Int('op83')
s.add(counter83 >= 0)
s.add(counter83 <= 1)
s.add(op83 == 83)
counter84 =Int('counter84')
op84 =Int('op84')
s.add(counter84 >= 0)
s.add(counter84 <= 1)
s.add(op84 == 84)
counter85 =Int('counter85')
op85 =Int('op85')
s.add(counter85 >= 0)
s.add(counter85 <= 1)
s.add(op85 == 85)
counter86 =Int('counter86')
op86 =Int('op86')
s.add(counter86 >= 0)
s.add(counter86 <= 1)
s.add(op86 == 86)
counter87 =Int('counter87')
op87 =Int('op87')
s.add(counter87 >= 0)
s.add(counter87 <= 1)
s.add(op87 == 87)
counter88 =Int('counter88')
op88 =Int('op88')
s.add(counter88 >= 0)
s.add(counter88 <= 1)
s.add(op88 == 88)
counter89 =Int('counter89')
op89 =Int('op89')
s.add(counter89 >= 0)
s.add(counter89 <= 1)
s.add(op89 == 89)
counter90 =Int('counter90')
op90 =Int('op90')
s.add(counter90 >= 0)
s.add(counter90 <= 1)
s.add(op90 == 90)
counter91 =Int('counter91')
op91 =Int('op91')
s.add(counter91 >= 0)
s.add(counter91 <= 1)
s.add(op91 == 91)
counter92 =Int('counter92')
op92 =Int('op92')
s.add(counter92 >= 0)
s.add(counter92 <= 1)
s.add(op92 == 92)
counter93 =Int('counter93')
op93 =Int('op93')
s.add(counter93 >= 0)
s.add(counter93 <= 1)
s.add(op93 == 93)
counter94 =Int('counter94')
op94 =Int('op94')
s.add(counter94 >= 0)
s.add(counter94 <= 1)
s.add(op94 == 94)
counter95 =Int('counter95')
op95 =Int('op95')
s.add(counter95 >= 0)
s.add(counter95 <= 1)
s.add(op95 == 95)
counter96 =Int('counter96')
op96 =Int('op96')
s.add(counter96 >= 0)
s.add(counter96 <= 1)
s.add(op96 == 96)
counter97 =Int('counter97')
op97 =Int('op97')
s.add(counter97 >= 0)
s.add(counter97 <= 1)
s.add(op97 == 97)
counter98 =Int('counter98')
op98 =Int('op98')
s.add(counter98 >= 0)
s.add(counter98 <= 1)
s.add(op98 == 98)
counter99 =Int('counter99')
op99 =Int('op99')
s.add(counter99 >= 0)
s.add(counter99 <= 1)
s.add(op99 == 99)
counter100 =Int('counter100')
op100 =Int('op100')
s.add(counter100 >= 0)
s.add(counter100 <= 1)
s.add(op100 == 100)
counter101 =Int('counter101')
op101 =Int('op101')
s.add(counter101 >= 0)
s.add(counter101 <= 1)
s.add(op101 == 101)
counter102 =Int('counter102')
op102 =Int('op102')
s.add(counter102 >= 0)
s.add(counter102 <= 1)
s.add(op102 == 102)
counter103 =Int('counter103')
op103 =Int('op103')
s.add(counter103 >= 0)
s.add(counter103 <= 1)
s.add(op103 == 103)
counter104 =Int('counter104')
op104 =Int('op104')
s.add(counter104 >= 0)
s.add(counter104 <= 1)
s.add(op104 == 104)
counter105 =Int('counter105')
op105 =Int('op105')
s.add(counter105 >= 0)
s.add(counter105 <= 1)
s.add(op105 == 105)
counter106 =Int('counter106')
op106 =Int('op106')
s.add(counter106 >= 0)
s.add(counter106 <= 1)
s.add(op106 == 106)
counter107 =Int('counter107')
op107 =Int('op107')
s.add(counter107 >= 0)
s.add(counter107 <= 1)
s.add(op107 == 107)
counter108 =Int('counter108')
op108 =Int('op108')
s.add(counter108 >= 0)
s.add(counter108 <= 1)
s.add(op108 == 108)
counter109 =Int('counter109')
op109 =Int('op109')
s.add(counter109 >= 0)
s.add(counter109 <= 1)
s.add(op109 == 109)
counter110 =Int('counter110')
op110 =Int('op110')
s.add(counter110 >= 0)
s.add(counter110 <= 1)
s.add(op110 == 110)
counter111 =Int('counter111')
op111 =Int('op111')
s.add(counter111 >= 0)
s.add(counter111 <= 1)
s.add(op111 == 111)
counter112 =Int('counter112')
op112 =Int('op112')
s.add(counter112 >= 0)
s.add(counter112 <= 1)
s.add(op112 == 112)
counter113 =Int('counter113')
op113 =Int('op113')
s.add(counter113 >= 0)
s.add(counter113 <= 1)
s.add(op113 == 113)
counter114 =Int('counter114')
op114 =Int('op114')
s.add(counter114 >= 0)
s.add(counter114 <= 1)
s.add(op114 == 114)
counter115 =Int('counter115')
op115 =Int('op115')
s.add(counter115 >= 0)
s.add(counter115 <= 1)
s.add(op115 == 115)
counter116 =Int('counter116')
op116 =Int('op116')
s.add(counter116 >= 0)
s.add(counter116 <= 1)
s.add(op116 == 116)
counter117 =Int('counter117')
op117 =Int('op117')
s.add(counter117 >= 0)
s.add(counter117 <= 1)
s.add(op117 == 117)
counter118 =Int('counter118')
op118 =Int('op118')
s.add(counter118 >= 0)
s.add(counter118 <= 1)
s.add(op118 == 118)
counter119 =Int('counter119')
op119 =Int('op119')
s.add(counter119 >= 0)
s.add(counter119 <= 1)
s.add(op119 == 119)
counter120 =Int('counter120')
op120 =Int('op120')
s.add(counter120 >= 0)
s.add(counter120 <= 1)
s.add(op120 == 120)
counter121 =Int('counter121')
op121 =Int('op121')
s.add(counter121 >= 0)
s.add(counter121 <= 1)
s.add(op121 == 121)
counter122 =Int('counter122')
op122 =Int('op122')
s.add(counter122 >= 0)
s.add(counter122 <= 1)
s.add(op122 == 122)
counter123 =Int('counter123')
op123 =Int('op123')
s.add(counter123 >= 0)
s.add(counter123 <= 1)
s.add(op123 == 123)
counter124 =Int('counter124')
op124 =Int('op124')
s.add(counter124 >= 0)
s.add(counter124 <= 1)
s.add(op124 == 124)
counter125 =Int('counter125')
op125 =Int('op125')
s.add(counter125 >= 0)
s.add(counter125 <= 1)
s.add(op125 == 125)
counter126 =Int('counter126')
op126 =Int('op126')
s.add(counter126 >= 0)
s.add(counter126 <= 1)
s.add(op126 == 126)
counter127 =Int('counter127')
op127 =Int('op127')
s.add(counter127 >= 0)
s.add(counter127 <= 1)
s.add(op127 == 127)
counter128 =Int('counter128')
op128 =Int('op128')
s.add(counter128 >= 0)
s.add(counter128 <= 1)
s.add(op128 == 128)
counter129 =Int('counter129')
op129 =Int('op129')
s.add(counter129 >= 0)
s.add(counter129 <= 1)
s.add(op129 == 129)
counter130 =Int('counter130')
op130 =Int('op130')
s.add(counter130 >= 0)
s.add(counter130 <= 1)
s.add(op130 == 130)
counter131 =Int('counter131')
op131 =Int('op131')
s.add(counter131 >= 0)
s.add(counter131 <= 1)
s.add(op131 == 131)
counter132 =Int('counter132')
op132 =Int('op132')
s.add(counter132 >= 0)
s.add(counter132 <= 1)
s.add(op132 == 132)
counter133 =Int('counter133')
op133 =Int('op133')
s.add(counter133 >= 0)
s.add(counter133 <= 1)
s.add(op133 == 133)
counter134 =Int('counter134')
op134 =Int('op134')
s.add(counter134 >= 0)
s.add(counter134 <= 1)
s.add(op134 == 134)
counter135 =Int('counter135')
op135 =Int('op135')
s.add(counter135 >= 0)
s.add(counter135 <= 1)
s.add(op135 == 135)
counter136 =Int('counter136')
op136 =Int('op136')
s.add(counter136 >= 0)
s.add(counter136 <= 1)
s.add(op136 == 136)
counter137 =Int('counter137')
op137 =Int('op137')
s.add(counter137 >= 0)
s.add(counter137 <= 1)
s.add(op137 == 137)
counter138 =Int('counter138')
op138 =Int('op138')
s.add(counter138 >= 0)
s.add(counter138 <= 1)
s.add(op138 == 138)
counter139 =Int('counter139')
op139 =Int('op139')
s.add(counter139 >= 0)
s.add(counter139 <= 1)
s.add(op139 == 139)
counter140 =Int('counter140')
op140 =Int('op140')
s.add(counter140 >= 0)
s.add(counter140 <= 1)
s.add(op140 == 140)
counter141 =Int('counter141')
op141 =Int('op141')
s.add(counter141 >= 0)
s.add(counter141 <= 1)
s.add(op141 == 141)
counter142 =Int('counter142')
op142 =Int('op142')
s.add(counter142 >= 0)
s.add(counter142 <= 1)
s.add(op142 == 142)
counter143 =Int('counter143')
op143 =Int('op143')
s.add(counter143 >= 0)
s.add(counter143 <= 1)
s.add(op143 == 143)
counter144 =Int('counter144')
op144 =Int('op144')
s.add(counter144 >= 0)
s.add(counter144 <= 1)
s.add(op144 == 144)
counter145 =Int('counter145')
op145 =Int('op145')
s.add(counter145 >= 0)
s.add(counter145 <= 1)
s.add(op145 == 145)
counter146 =Int('counter146')
op146 =Int('op146')
s.add(counter146 >= 0)
s.add(counter146 <= 1)
s.add(op146 == 146)
counter147 =Int('counter147')
op147 =Int('op147')
s.add(counter147 >= 0)
s.add(counter147 <= 1)
s.add(op147 == 147)
counter148 =Int('counter148')
op148 =Int('op148')
s.add(counter148 >= 0)
s.add(counter148 <= 1)
s.add(op148 == 148)
counter149 =Int('counter149')
op149 =Int('op149')
s.add(counter149 >= 0)
s.add(counter149 <= 1)
s.add(op149 == 149)
counter150 =Int('counter150')
op150 =Int('op150')
s.add(counter150 >= 0)
s.add(counter150 <= 1)
s.add(op150 == 150)
counter151 =Int('counter151')
op151 =Int('op151')
s.add(counter151 >= 0)
s.add(counter151 <= 1)
s.add(op151 == 151)
counter152 =Int('counter152')
op152 =Int('op152')
s.add(counter152 >= 0)
s.add(counter152 <= 1)
s.add(op152 == 152)
counter153 =Int('counter153')
op153 =Int('op153')
s.add(counter153 >= 0)
s.add(counter153 <= 1)
s.add(op153 == 153)
counter154 =Int('counter154')
op154 =Int('op154')
s.add(counter154 >= 0)
s.add(counter154 <= 1)
s.add(op154 == 154)
counter155 =Int('counter155')
op155 =Int('op155')
s.add(counter155 >= 0)
s.add(counter155 <= 1)
s.add(op155 == 155)
counter156 =Int('counter156')
op156 =Int('op156')
s.add(counter156 >= 0)
s.add(counter156 <= 1)
s.add(op156 == 156)
counter157 =Int('counter157')
op157 =Int('op157')
s.add(counter157 >= 0)
s.add(counter157 <= 1)
s.add(op157 == 157)
counter158 =Int('counter158')
op158 =Int('op158')
s.add(counter158 >= 0)
s.add(counter158 <= 1)
s.add(op158 == 158)
counter159 =Int('counter159')
op159 =Int('op159')
s.add(counter159 >= 0)
s.add(counter159 <= 1)
s.add(op159 == 159)
counter160 =Int('counter160')
op160 =Int('op160')
s.add(counter160 >= 0)
s.add(counter160 <= 1)
s.add(op160 == 160)
counter161 =Int('counter161')
op161 =Int('op161')
s.add(counter161 >= 0)
s.add(counter161 <= 1)
s.add(op161 == 161)
counter162 =Int('counter162')
op162 =Int('op162')
s.add(counter162 >= 0)
s.add(counter162 <= 1)
s.add(op162 == 162)
counter163 =Int('counter163')
op163 =Int('op163')
s.add(counter163 >= 0)
s.add(counter163 <= 1)
s.add(op163 == 163)
counter164 =Int('counter164')
op164 =Int('op164')
s.add(counter164 >= 0)
s.add(counter164 <= 1)
s.add(op164 == 164)
counter165 =Int('counter165')
op165 =Int('op165')
s.add(counter165 >= 0)
s.add(counter165 <= 1)
s.add(op165 == 165)
counter166 =Int('counter166')
op166 =Int('op166')
s.add(counter166 >= 0)
s.add(counter166 <= 1)
s.add(op166 == 166)
counter167 =Int('counter167')
op167 =Int('op167')
s.add(counter167 >= 0)
s.add(counter167 <= 1)
s.add(op167 == 167)
counter168 =Int('counter168')
op168 =Int('op168')
s.add(counter168 >= 0)
s.add(counter168 <= 1)
s.add(op168 == 168)
counter169 =Int('counter169')
op169 =Int('op169')
s.add(counter169 >= 0)
s.add(counter169 <= 1)
s.add(op169 == 169)
counter170 =Int('counter170')
op170 =Int('op170')
s.add(counter170 >= 0)
s.add(counter170 <= 1)
s.add(op170 == 170)
counter171 =Int('counter171')
op171 =Int('op171')
s.add(counter171 >= 0)
s.add(counter171 <= 1)
s.add(op171 == 171)
counter172 =Int('counter172')
op172 =Int('op172')
s.add(counter172 >= 0)
s.add(counter172 <= 1)
s.add(op172 == 172)
counter173 =Int('counter173')
op173 =Int('op173')
s.add(counter173 >= 0)
s.add(counter173 <= 1)
s.add(op173 == 173)
counter174 =Int('counter174')
op174 =Int('op174')
s.add(counter174 >= 0)
s.add(counter174 <= 1)
s.add(op174 == 174)
counter175 =Int('counter175')
op175 =Int('op175')
s.add(counter175 >= 0)
s.add(counter175 <= 1)
s.add(op175 == 175)
counter176 =Int('counter176')
op176 =Int('op176')
s.add(counter176 >= 0)
s.add(counter176 <= 1)
s.add(op176 == 176)
counter177 =Int('counter177')
op177 =Int('op177')
s.add(counter177 >= 0)
s.add(counter177 <= 1)
s.add(op177 == 177)
counter178 =Int('counter178')
op178 =Int('op178')
s.add(counter178 >= 0)
s.add(counter178 <= 1)
s.add(op178 == 178)
counter179 =Int('counter179')
op179 =Int('op179')
s.add(counter179 >= 0)
s.add(counter179 <= 1)
s.add(op179 == 179)
counter180 =Int('counter180')
op180 =Int('op180')
s.add(counter180 >= 0)
s.add(counter180 <= 1)
s.add(op180 == 180)
counter181 =Int('counter181')
op181 =Int('op181')
s.add(counter181 >= 0)
s.add(counter181 <= 1)
s.add(op181 == 181)
counter182 =Int('counter182')
op182 =Int('op182')
s.add(counter182 >= 0)
s.add(counter182 <= 1)
s.add(op182 == 182)
counter183 =Int('counter183')
op183 =Int('op183')
s.add(counter183 >= 0)
s.add(counter183 <= 1)
s.add(op183 == 183)
counter184 =Int('counter184')
op184 =Int('op184')
s.add(counter184 >= 0)
s.add(counter184 <= 1)
s.add(op184 == 184)
counter185 =Int('counter185')
op185 =Int('op185')
s.add(counter185 >= 0)
s.add(counter185 <= 1)
s.add(op185 == 185)
counter186 =Int('counter186')
op186 =Int('op186')
s.add(counter186 >= 0)
s.add(counter186 <= 1)
s.add(op186 == 186)
counter187 =Int('counter187')
op187 =Int('op187')
s.add(counter187 >= 0)
s.add(counter187 <= 1)
s.add(op187 == 187)
counter188 =Int('counter188')
op188 =Int('op188')
s.add(counter188 >= 0)
s.add(counter188 <= 1)
s.add(op188 == 188)
counter189 =Int('counter189')
op189 =Int('op189')
s.add(counter189 >= 0)
s.add(counter189 <= 1)
s.add(op189 == 189)
counter190 =Int('counter190')
op190 =Int('op190')
s.add(counter190 >= 0)
s.add(counter190 <= 1)
s.add(op190 == 190)
counter191 =Int('counter191')
op191 =Int('op191')
s.add(counter191 >= 0)
s.add(counter191 <= 1)
s.add(op191 == 191)
counter192 =Int('counter192')
op192 =Int('op192')
s.add(counter192 >= 0)
s.add(counter192 <= 1)
s.add(op192 == 192)
counter193 =Int('counter193')
op193 =Int('op193')
s.add(counter193 >= 0)
s.add(counter193 <= 1)
s.add(op193 == 193)
counter194 =Int('counter194')
op194 =Int('op194')
s.add(counter194 >= 0)
s.add(counter194 <= 1)
s.add(op194 == 194)
counter195 =Int('counter195')
op195 =Int('op195')
s.add(counter195 >= 0)
s.add(counter195 <= 1)
s.add(op195 == 195)
counter196 =Int('counter196')
op196 =Int('op196')
s.add(counter196 >= 0)
s.add(counter196 <= 1)
s.add(op196 == 196)
counter197 =Int('counter197')
op197 =Int('op197')
s.add(counter197 >= 0)
s.add(counter197 <= 1)
s.add(op197 == 197)
counter198 =Int('counter198')
op198 =Int('op198')
s.add(counter198 >= 0)
s.add(counter198 <= 1)
s.add(op198 == 198)
counter199 =Int('counter199')
op199 =Int('op199')
s.add(counter199 >= 0)
s.add(counter199 <= 1)
s.add(op199 == 199)
counter200 =Int('counter200')
op200 =Int('op200')
s.add(counter200 >= 0)
s.add(counter200 <= 1)
s.add(op200 == 200)
s.add( counter200 * op200 + counter2 * op2 + counter3 * op3 + counter4 * op4 + counter5 * op5 + counter6 * op6 + counter7 * op7 + counter8 * op8 + counter9 * op9 + counter10 * op10 + counter11 * op11 + counter12 * op12 + counter13 * op13 + counter14 * op14 + counter15 * op15 + counter16 * op16 + counter17 * op17 + counter18 * op18 + counter19 * op19 + counter20 * op20 + counter21 * op21 + counter22 * op22 + counter23 * op23 + counter24 * op24 + counter25 * op25 + counter26 * op26 + counter27 * op27 + counter28 * op28 + counter29 * op29 + counter30 * op30 + counter31 * op31 + counter32 * op32 + counter33 * op33 + counter34 * op34 + counter35 * op35 + counter36 * op36 + counter37 * op37 + counter38 * op38 + counter39 * op39 + counter40 * op40 + counter41 * op41 + counter42 * op42 + counter43 * op43 + counter44 * op44 + counter45 * op45 + counter46 * op46 + counter47 * op47 + counter48 * op48 + counter49 * op49 + counter50 * op50 + counter51 * op51 + counter52 * op52 + counter53 * op53 + counter54 * op54 + counter55 * op55 + counter56 * op56 + counter57 * op57 + counter58 * op58 + counter59 * op59 + counter60 * op60 + counter61 * op61 + counter62 * op62 + counter63 * op63 + counter64 * op64 + counter65 * op65 + counter66 * op66 + counter67 * op67 + counter68 * op68 + counter69 * op69 + counter70 * op70 + counter71 * op71 + counter72 * op72 + counter73 * op73 + counter74 * op74 + counter75 * op75 + counter76 * op76 + counter77 * op77 + counter78 * op78 + counter79 * op79 + counter80 * op80 + counter81 * op81 + counter82 * op82 + counter83 * op83 + counter84 * op84 + counter85 * op85 + counter86 * op86 + counter87 * op87 + counter88 * op88 + counter89 * op89 + counter90 * op90 + counter91 * op91 + counter92 * op92 + counter93 * op93 + counter94 * op94 + counter95 * op95 + counter96 * op96 + counter97 * op97 + counter98 * op98 + counter99 * op99 + counter100 * op100 + counter101 * op101 + counter102 * op102 + counter103 * op103 + counter104 * op104 + counter105 * op105 + counter106 * op106 + counter107 * op107 + counter108 * op108 + counter109 * op109 + counter110 * op110 + counter111 * op111 + counter112 * op112 + counter113 * op113 + counter114 * op114 + counter115 * op115 + counter116 * op116 + counter117 * op117 + counter118 * op118 + counter119 * op119 + counter120 * op120 + counter121 * op121 + counter122 * op122 + counter123 * op123 + counter124 * op124 + counter125 * op125 + counter126 * op126 + counter127 * op127 + counter128 * op128 + counter129 * op129 + counter130 * op130 + counter131 * op131 + counter132 * op132 + counter133 * op133 + counter134 * op134 + counter135 * op135 + counter136 * op136 + counter137 * op137 + counter138 * op138 + counter139 * op139 + counter140 * op140 + counter141 * op141 + counter142 * op142 + counter143 * op143 + counter144 * op144 + counter145 * op145 + counter146 * op146 + counter147 * op147 + counter148 * op148 + counter149 * op149 + counter150 * op150 + counter151 * op151 + counter152 * op152 + counter153 * op153 + counter154 * op154 + counter155 * op155 + counter156 * op156 + counter157 * op157 + counter158 * op158 + counter159 * op159 + counter160 * op160 + counter161 * op161 + counter162 * op162 + counter163 * op163 + counter164 * op164 + counter165 * op165 + counter166 * op166 + counter167 * op167 + counter168 * op168 + counter169 * op169 + counter170 * op170 + counter171 * op171 + counter172 * op172 + counter173 * op173 + counter174 * op174 + counter175 * op175 + counter176 * op176 + counter177 * op177 + counter178 * op178 + counter179 * op179 + counter180 * op180 + counter181 * op181 + counter182 * op182 + counter183 * op183 + counter184 * op184 + counter185 * op185 + counter186 * op186 + counter187 * op187 + counter188 * op188 + counter189 * op189 + counter190 * op190 + counter191 * op191 + counter192 * op192 + counter193 * op193 + counter194 * op194 + counter195 * op195 + counter196 * op196 + counter197 * op197 + counter198 * op198 + counter199 * op199 + counter200 * op200 == 75)
x=s.check()
if(x == z3.sat):
	m = s.model()
	print m
else:
	print unsat
