#!/usr/bin/python

from z3 import *

def IntArr(prefix, sz, N):
  """Create a vector with N Bit-Vectors of size sz"""
  return [ BitVec('%s__%s' % (prefix, i), sz) for i in range(N) ]

def get_var_name(**kwargs): return kwargs.keys()[0]



def getElement(arr , idx, name1, name2, name3):
    #if type(idx) is int:
    #    return arr[idx]
#    name = name1+name2
#    symVar = Int(name)
    symVar = Int(name3)
    return symVar

def indexCheck(lhs, lhsName):
    #if type(lhs) is int:
    #    return ''
    #else:
    lhs  = Int(lhsName)
    #s.add(lhs ==rhs)
    s.add(lhs >= 0)

def getZ3VariableFromString(s, varString):
    if(s.check() != z3.sat):
        return None
    m = s.model()
    for c in m.decls():
        n = c.name()
        if n == varString:
            return c
    assert (0), "z3 String varString does not exist"

def addArrayConstraints(s):
    m = s.model()
    idxList = []
    arrList = []
    for c in m.decls():
        n = c.name()
        if n.count('t') == 2:
            print "#array element ", n, m[c]
            idx =  n[n.rfind("t"): len(n) ]
            print "#index taint = ", idx
            idxList.append(idx)
            arrList.append(n)
    print "#arrList = ", arrList
    print "#idxList = ", idxList
    for i in range(len(arrList)):
        obj_i_name = arrList[i]
        taint_i_name = obj_i_name[obj_i_name.rfind("t"): len(obj_i_name)]
        #obj_i = getZ3VariableFromString(s,obj_i_name)
        obj_i = get_var_name(obj_i_name=obj_i_name)
        #taint_i = getZ3VariableFromString(s,taint_i_name)
        taint_i = get_var_name(taint_i_name=taint_i_name)
        if obj_i is None or taint_i is None:
            print "#either obj_i ", obj_i_name, " or taint_i ", taint_i_name, " did not get instantiated" 
            return None
        for j in range(len(arrList)):
            if(i == j):
                continue
            obj_j_name = arrList[j]
            taint_j_name = obj_j_name[obj_j_name.rfind("t"): len(obj_j_name)]
            #obj_j = getZ3VariableFromString(s,obj_j_name)
            obj_j = get_var_name(obj_j_name=obj_j_name)
            #taint_j = getZ3VariableFromString(s,taint_j_name)
            taint_j = get_var_name(taint_j_name=taint_j_name)
            if obj_j is None or taint_j is None:
                print "#either obj_j ", obj_j_name, " or taint_j ", taint_j_name, " did not get instantiated"
                return None
            print "====BEFORE ADDING CONSTRAINT==="
            for c in s.assertions():
	        print c
            new_s = Solver()
            new_s = s
            new_s.add(Implies(obj_i != obj_j , taint_i != taint_j))
            print "====AFTER ADDING CONSTRAINT==="
            for c in new_s.assertions():
	        print c
            s = new_s
#            if(obj_i != obj_j):
#                print "#obj_i ", obj_i_name," obj_j ", obj_j_name, " are not equal"
#                print "adding constraint, i != j for taints ", taint_i_name, " and ", taint_j_name 
#         #       s.push()
#                print "====BEFORE ADDING CONSTRAINT==="
#            	for c in s.assertions():
#		    print c
#                s.add((taint_i != taint_j))
#                print "===AFTER ADDING CONSTRAINT==="
#            	for c in s.assertions():
#		    print c
#                if s.check() == z3.unsat:
#                    return None
#                #else:
#                #    print s.model()
    return s

def CharArr(prefix, sz, N):
  """Create a vector with N Bit-Vectors of size sz"""
  return [ BitVec('%s__%s' % (prefix, i), sz) for i in range(N) ]

def CharArr2D(prefix):
    return [[]]

def extendList(var, num, prefix):
    listSize = len(var)
    if num - listSize > 0:
        incrementSize = num-listSize
        for val in range(incrementSize):
            var.append( BitVec('%s__%s' % (prefix, listSize + val), 32))

def BitVectorToInt(var):
    if type(var) is int:    # if already int dont do anything
        return
    elif is_bv(var) and var.size() == 32: # if bitvector is int of size
        # 32, then return Integer equavalent
        ctx = var.ctx
        return ArithRef(Z3_mk_bv2int(ctx.ref(), var.as_ast(), 0), ctx)
    else:       # if bitvector is that of char, return as is
            # since all character operations happen on bitvector
        return var

def ConstIntArr(var, size):
#  	return [ BitVec('%s__%s' % (var, i), 32) for i in range(size) ]
    return []

def indexSanitizer(index, arrSize, s):
	s.push()
	s.add(index < 0)
	if(s.check() == z3.sat):
		print "NEGATIVE INDEX POSSIBLE"
		print (s.model())
	s.pop()
	
	s.push()
	s.add(index >= arrSize)
	if(s.check() == z3.sat):
		print "OVERFLOW INDEX POSSIBLE"
		print (s.model())
	s.pop()

	s.push()
	s.add(index >=0 , index < arrSize)
	if(s.check() != z3.sat):
		print "VALID ARRAY INDEX NOT POSSIBLE"
		s.pop()
		return -1
	else:
		index = s.model()[index]
		return index

set_param('smt.bv.enable_int2bv',True)

s = Solver()


counter0=Int('counter0')
s.add(counter0 == 0)
s0= Int('s0')
counter1=Int('counter1')
s.add(counter1==If(s0 == 50,counter0 + 1, counter0))
s1=Int('s1')
counter2=Int('counter2')
s.add(counter2==If(s1 == 50,counter1 + 2, counter1))
s2=Int('s2')
counter3=Int('counter3')
s.add(counter3==If(s2 == 50,counter2 + 3, counter2))
s3=Int('s3')
counter4=Int('counter4')
s.add(counter4==If(s3 == 50,counter3 + 4, counter3))
s4=Int('s4')
counter5=Int('counter5')
s.add(counter5==If(s4 == 50,counter4 + 5, counter4))
s5=Int('s5')
counter6=Int('counter6')
s.add(counter6==If(s5 == 50,counter5 + 6, counter5))
s6=Int('s6')
counter7=Int('counter7')
s.add(counter7==If(s6 == 50,counter6 + 7, counter6))
s7=Int('s7')
counter8=Int('counter8')
s.add(counter8==If(s7 == 50,counter7 + 8, counter7))
s8=Int('s8')
counter9=Int('counter9')
s.add(counter9==If(s8 == 50,counter8 + 9, counter8))
s9=Int('s9')
counter10=Int('counter10')
s.add(counter10==If(s9 == 50,counter9 + 10, counter9))
s10=Int('s10')
counter11=Int('counter11')
s.add(counter11==If(s10 == 50,counter10 + 11, counter10))
s11=Int('s11')
counter12=Int('counter12')
s.add(counter12==If(s11 == 50,counter11 + 12, counter11))
s12=Int('s12')
counter13=Int('counter13')
s.add(counter13==If(s12 == 50,counter12 + 13, counter12))
s13=Int('s13')
counter14=Int('counter14')
s.add(counter14==If(s13 == 50,counter13 + 14, counter13))
s14=Int('s14')
counter15=Int('counter15')
s.add(counter15==If(s14 == 50,counter14 + 15, counter14))
s15=Int('s15')
counter16=Int('counter16')
s.add(counter16==If(s15 == 50,counter15 + 16, counter15))
s16=Int('s16')
counter17=Int('counter17')
s.add(counter17==If(s16 == 50,counter16 + 17, counter16))
s17=Int('s17')
counter18=Int('counter18')
s.add(counter18==If(s17 == 50,counter17 + 18, counter17))
s18=Int('s18')
counter19=Int('counter19')
s.add(counter19==If(s18 == 50,counter18 + 19, counter18))
s19=Int('s19')
counter20=Int('counter20')
s.add(counter20==If(s19 == 50,counter19 + 20, counter19))
s20=Int('s20')
counter21=Int('counter21')
s.add(counter21==If(s20 == 50,counter20 + 21, counter20))
s21=Int('s21')
counter22=Int('counter22')
s.add(counter22==If(s21 == 50,counter21 + 22, counter21))
s22=Int('s22')
counter23=Int('counter23')
s.add(counter23==If(s22 == 50,counter22 + 23, counter22))
s23=Int('s23')
counter24=Int('counter24')
s.add(counter24==If(s23 == 50,counter23 + 24, counter23))
s24=Int('s24')
counter25=Int('counter25')
s.add(counter25==If(s24 == 50,counter24 + 25, counter24))
s25=Int('s25')
counter26=Int('counter26')
s.add(counter26==If(s25 == 50,counter25 + 26, counter25))
s26=Int('s26')
counter27=Int('counter27')
s.add(counter27==If(s26 == 50,counter26 + 27, counter26))
s27=Int('s27')
counter28=Int('counter28')
s.add(counter28==If(s27 == 50,counter27 + 28, counter27))
s28=Int('s28')
counter29=Int('counter29')
s.add(counter29==If(s28 == 50,counter28 + 29, counter28))
s29=Int('s29')
counter30=Int('counter30')
s.add(counter30==If(s29 == 50,counter29 + 30, counter29))
s30=Int('s30')
counter31=Int('counter31')
s.add(counter31==If(s30 == 50,counter30 + 31, counter30))
s31=Int('s31')
counter32=Int('counter32')
s.add(counter32==If(s31 == 50,counter31 + 32, counter31))
s32=Int('s32')
counter33=Int('counter33')
s.add(counter33==If(s32 == 50,counter32 + 33, counter32))
s33=Int('s33')
counter34=Int('counter34')
s.add(counter34==If(s33 == 50,counter33 + 34, counter33))
s34=Int('s34')
counter35=Int('counter35')
s.add(counter35==If(s34 == 50,counter34 + 35, counter34))
s35=Int('s35')
counter36=Int('counter36')
s.add(counter36==If(s35 == 50,counter35 + 36, counter35))
s36=Int('s36')
counter37=Int('counter37')
s.add(counter37==If(s36 == 50,counter36 + 37, counter36))
s37=Int('s37')
counter38=Int('counter38')
s.add(counter38==If(s37 == 50,counter37 + 38, counter37))
s38=Int('s38')
counter39=Int('counter39')
s.add(counter39==If(s38 == 50,counter38 + 39, counter38))
s39=Int('s39')
counter40=Int('counter40')
s.add(counter40==If(s39 == 50,counter39 + 40, counter39))
s40=Int('s40')
counter41=Int('counter41')
s.add(counter41==If(s40 == 50,counter40 + 41, counter40))
s41=Int('s41')
counter42=Int('counter42')
s.add(counter42==If(s41 == 50,counter41 + 42, counter41))
s42=Int('s42')
counter43=Int('counter43')
s.add(counter43==If(s42 == 50,counter42 + 43, counter42))
s43=Int('s43')
counter44=Int('counter44')
s.add(counter44==If(s43 == 50,counter43 + 44, counter43))
s44=Int('s44')
counter45=Int('counter45')
s.add(counter45==If(s44 == 50,counter44 + 45, counter44))
s45=Int('s45')
counter46=Int('counter46')
s.add(counter46==If(s45 == 50,counter45 + 46, counter45))
s46=Int('s46')
counter47=Int('counter47')
s.add(counter47==If(s46 == 50,counter46 + 47, counter46))
s47=Int('s47')
counter48=Int('counter48')
s.add(counter48==If(s47 == 50,counter47 + 48, counter47))
s48=Int('s48')
counter49=Int('counter49')
s.add(counter49==If(s48 == 50,counter48 + 49, counter48))
s49=Int('s49')
counter50=Int('counter50')
s.add(counter50==If(s49 == 50,counter49 + 50, counter49))
s50=Int('s50')
counter51=Int('counter51')
s.add(counter51==If(s50 == 50,counter50 + 51, counter50))
s51=Int('s51')
counter52=Int('counter52')
s.add(counter52==If(s51 == 50,counter51 + 52, counter51))
s52=Int('s52')
counter53=Int('counter53')
s.add(counter53==If(s52 == 50,counter52 + 53, counter52))
s53=Int('s53')
counter54=Int('counter54')
s.add(counter54==If(s53 == 50,counter53 + 54, counter53))
s54=Int('s54')
counter55=Int('counter55')
s.add(counter55==If(s54 == 50,counter54 + 55, counter54))
s55=Int('s55')
counter56=Int('counter56')
s.add(counter56==If(s55 == 50,counter55 + 56, counter55))
s56=Int('s56')
counter57=Int('counter57')
s.add(counter57==If(s56 == 50,counter56 + 57, counter56))
s57=Int('s57')
counter58=Int('counter58')
s.add(counter58==If(s57 == 50,counter57 + 58, counter57))
s58=Int('s58')
counter59=Int('counter59')
s.add(counter59==If(s58 == 50,counter58 + 59, counter58))
s59=Int('s59')
counter60=Int('counter60')
s.add(counter60==If(s59 == 50,counter59 + 60, counter59))
s60=Int('s60')
counter61=Int('counter61')
s.add(counter61==If(s60 == 50,counter60 + 61, counter60))
s61=Int('s61')
counter62=Int('counter62')
s.add(counter62==If(s61 == 50,counter61 + 62, counter61))
s62=Int('s62')
counter63=Int('counter63')
s.add(counter63==If(s62 == 50,counter62 + 63, counter62))
s63=Int('s63')
counter64=Int('counter64')
s.add(counter64==If(s63 == 50,counter63 + 64, counter63))
s64=Int('s64')
counter65=Int('counter65')
s.add(counter65==If(s64 == 50,counter64 + 65, counter64))
s65=Int('s65')
counter66=Int('counter66')
s.add(counter66==If(s65 == 50,counter65 + 66, counter65))
s66=Int('s66')
counter67=Int('counter67')
s.add(counter67==If(s66 == 50,counter66 + 67, counter66))
s67=Int('s67')
counter68=Int('counter68')
s.add(counter68==If(s67 == 50,counter67 + 68, counter67))
s68=Int('s68')
counter69=Int('counter69')
s.add(counter69==If(s68 == 50,counter68 + 69, counter68))
s69=Int('s69')
counter70=Int('counter70')
s.add(counter70==If(s69 == 50,counter69 + 70, counter69))
s70=Int('s70')
counter71=Int('counter71')
s.add(counter71==If(s70 == 50,counter70 + 71, counter70))
s71=Int('s71')
counter72=Int('counter72')
s.add(counter72==If(s71 == 50,counter71 + 72, counter71))
s72=Int('s72')
counter73=Int('counter73')
s.add(counter73==If(s72 == 50,counter72 + 73, counter72))
s73=Int('s73')
counter74=Int('counter74')
s.add(counter74==If(s73 == 50,counter73 + 74, counter73))
s74=Int('s74')
counter75=Int('counter75')
s.add(counter75==If(s74 == 50,counter74 + 75, counter74))
s75=Int('s75')
counter76=Int('counter76')
s.add(counter76==If(s75 == 50,counter75 + 76, counter75))
s76=Int('s76')
counter77=Int('counter77')
s.add(counter77==If(s76 == 50,counter76 + 77, counter76))
s77=Int('s77')
counter78=Int('counter78')
s.add(counter78==If(s77 == 50,counter77 + 78, counter77))
s78=Int('s78')
counter79=Int('counter79')
s.add(counter79==If(s78 == 50,counter78 + 79, counter78))
s79=Int('s79')
counter80=Int('counter80')
s.add(counter80==If(s79 == 50,counter79 + 80, counter79))
s80=Int('s80')
counter81=Int('counter81')
s.add(counter81==If(s80 == 50,counter80 + 81, counter80))
s81=Int('s81')
counter82=Int('counter82')
s.add(counter82==If(s81 == 50,counter81 + 82, counter81))
s82=Int('s82')
counter83=Int('counter83')
s.add(counter83==If(s82 == 50,counter82 + 83, counter82))
s83=Int('s83')
counter84=Int('counter84')
s.add(counter84==If(s83 == 50,counter83 + 84, counter83))
s84=Int('s84')
counter85=Int('counter85')
s.add(counter85==If(s84 == 50,counter84 + 85, counter84))
s85=Int('s85')
counter86=Int('counter86')
s.add(counter86==If(s85 == 50,counter85 + 86, counter85))
s86=Int('s86')
counter87=Int('counter87')
s.add(counter87==If(s86 == 50,counter86 + 87, counter86))
s87=Int('s87')
counter88=Int('counter88')
s.add(counter88==If(s87 == 50,counter87 + 88, counter87))
s88=Int('s88')
counter89=Int('counter89')
s.add(counter89==If(s88 == 50,counter88 + 89, counter88))
s89=Int('s89')
counter90=Int('counter90')
s.add(counter90==If(s89 == 50,counter89 + 90, counter89))
s90=Int('s90')
counter91=Int('counter91')
s.add(counter91==If(s90 == 50,counter90 + 91, counter90))
s91=Int('s91')
counter92=Int('counter92')
s.add(counter92==If(s91 == 50,counter91 + 92, counter91))
s92=Int('s92')
counter93=Int('counter93')
s.add(counter93==If(s92 == 50,counter92 + 93, counter92))
s93=Int('s93')
counter94=Int('counter94')
s.add(counter94==If(s93 == 50,counter93 + 94, counter93))
s94=Int('s94')
counter95=Int('counter95')
s.add(counter95==If(s94 == 50,counter94 + 95, counter94))
s95=Int('s95')
counter96=Int('counter96')
s.add(counter96==If(s95 == 50,counter95 + 96, counter95))
s96=Int('s96')
counter97=Int('counter97')
s.add(counter97==If(s96 == 50,counter96 + 97, counter96))
s97=Int('s97')
counter98=Int('counter98')
s.add(counter98==If(s97 == 50,counter97 + 98, counter97))
s98=Int('s98')
counter99=Int('counter99')
s.add(counter99==If(s98 == 50,counter98 + 99, counter98))
s99=Int('s99')
counter100=Int('counter100')
s.add(counter100==If(s99 == 50,counter99 + 100, counter99))
s100=Int('s100')
counter101=Int('counter101')
s.add(counter101==If(s100 == 50,counter100 + 101, counter100))
s101=Int('s101')
counter102=Int('counter102')
s.add(counter102==If(s101 == 50,counter101 + 102, counter101))
s102=Int('s102')
counter103=Int('counter103')
s.add(counter103==If(s102 == 50,counter102 + 103, counter102))
s103=Int('s103')
counter104=Int('counter104')
s.add(counter104==If(s103 == 50,counter103 + 104, counter103))
s104=Int('s104')
counter105=Int('counter105')
s.add(counter105==If(s104 == 50,counter104 + 105, counter104))
s105=Int('s105')
counter106=Int('counter106')
s.add(counter106==If(s105 == 50,counter105 + 106, counter105))
s106=Int('s106')
counter107=Int('counter107')
s.add(counter107==If(s106 == 50,counter106 + 107, counter106))
s107=Int('s107')
counter108=Int('counter108')
s.add(counter108==If(s107 == 50,counter107 + 108, counter107))
s108=Int('s108')
counter109=Int('counter109')
s.add(counter109==If(s108 == 50,counter108 + 109, counter108))
s109=Int('s109')
counter110=Int('counter110')
s.add(counter110==If(s109 == 50,counter109 + 110, counter109))
s110=Int('s110')
counter111=Int('counter111')
s.add(counter111==If(s110 == 50,counter110 + 111, counter110))
s111=Int('s111')
counter112=Int('counter112')
s.add(counter112==If(s111 == 50,counter111 + 112, counter111))
s112=Int('s112')
counter113=Int('counter113')
s.add(counter113==If(s112 == 50,counter112 + 113, counter112))
s113=Int('s113')
counter114=Int('counter114')
s.add(counter114==If(s113 == 50,counter113 + 114, counter113))
s114=Int('s114')
counter115=Int('counter115')
s.add(counter115==If(s114 == 50,counter114 + 115, counter114))
s115=Int('s115')
counter116=Int('counter116')
s.add(counter116==If(s115 == 50,counter115 + 116, counter115))
s116=Int('s116')
counter117=Int('counter117')
s.add(counter117==If(s116 == 50,counter116 + 117, counter116))
s117=Int('s117')
counter118=Int('counter118')
s.add(counter118==If(s117 == 50,counter117 + 118, counter117))
s118=Int('s118')
counter119=Int('counter119')
s.add(counter119==If(s118 == 50,counter118 + 119, counter118))
s119=Int('s119')
counter120=Int('counter120')
s.add(counter120==If(s119 == 50,counter119 + 120, counter119))
s120=Int('s120')
counter121=Int('counter121')
s.add(counter121==If(s120 == 50,counter120 + 121, counter120))
s121=Int('s121')
counter122=Int('counter122')
s.add(counter122==If(s121 == 50,counter121 + 122, counter121))
s122=Int('s122')
counter123=Int('counter123')
s.add(counter123==If(s122 == 50,counter122 + 123, counter122))
s123=Int('s123')
counter124=Int('counter124')
s.add(counter124==If(s123 == 50,counter123 + 124, counter123))
s124=Int('s124')
counter125=Int('counter125')
s.add(counter125==If(s124 == 50,counter124 + 125, counter124))
s125=Int('s125')
counter126=Int('counter126')
s.add(counter126==If(s125 == 50,counter125 + 126, counter125))
s126=Int('s126')
counter127=Int('counter127')
s.add(counter127==If(s126 == 50,counter126 + 127, counter126))
s127=Int('s127')
counter128=Int('counter128')
s.add(counter128==If(s127 == 50,counter127 + 128, counter127))
s128=Int('s128')
counter129=Int('counter129')
s.add(counter129==If(s128 == 50,counter128 + 129, counter128))
s129=Int('s129')
counter130=Int('counter130')
s.add(counter130==If(s129 == 50,counter129 + 130, counter129))
s130=Int('s130')
counter131=Int('counter131')
s.add(counter131==If(s130 == 50,counter130 + 131, counter130))
s131=Int('s131')
counter132=Int('counter132')
s.add(counter132==If(s131 == 50,counter131 + 132, counter131))
s132=Int('s132')
counter133=Int('counter133')
s.add(counter133==If(s132 == 50,counter132 + 133, counter132))
s133=Int('s133')
counter134=Int('counter134')
s.add(counter134==If(s133 == 50,counter133 + 134, counter133))
s134=Int('s134')
counter135=Int('counter135')
s.add(counter135==If(s134 == 50,counter134 + 135, counter134))
s135=Int('s135')
counter136=Int('counter136')
s.add(counter136==If(s135 == 50,counter135 + 136, counter135))
s136=Int('s136')
counter137=Int('counter137')
s.add(counter137==If(s136 == 50,counter136 + 137, counter136))
s137=Int('s137')
counter138=Int('counter138')
s.add(counter138==If(s137 == 50,counter137 + 138, counter137))
s138=Int('s138')
counter139=Int('counter139')
s.add(counter139==If(s138 == 50,counter138 + 139, counter138))
s139=Int('s139')
counter140=Int('counter140')
s.add(counter140==If(s139 == 50,counter139 + 140, counter139))
s140=Int('s140')
counter141=Int('counter141')
s.add(counter141==If(s140 == 50,counter140 + 141, counter140))
s141=Int('s141')
counter142=Int('counter142')
s.add(counter142==If(s141 == 50,counter141 + 142, counter141))
s142=Int('s142')
counter143=Int('counter143')
s.add(counter143==If(s142 == 50,counter142 + 143, counter142))
s143=Int('s143')
counter144=Int('counter144')
s.add(counter144==If(s143 == 50,counter143 + 144, counter143))
s144=Int('s144')
counter145=Int('counter145')
s.add(counter145==If(s144 == 50,counter144 + 145, counter144))
s145=Int('s145')
counter146=Int('counter146')
s.add(counter146==If(s145 == 50,counter145 + 146, counter145))
s146=Int('s146')
counter147=Int('counter147')
s.add(counter147==If(s146 == 50,counter146 + 147, counter146))
s147=Int('s147')
counter148=Int('counter148')
s.add(counter148==If(s147 == 50,counter147 + 148, counter147))
s148=Int('s148')
counter149=Int('counter149')
s.add(counter149==If(s148 == 50,counter148 + 149, counter148))
s149=Int('s149')
counter150=Int('counter150')
s.add(counter150==If(s149 == 50,counter149 + 150, counter149))
s150=Int('s150')
counter151=Int('counter151')
s.add(counter151==If(s150 == 50,counter150 + 151, counter150))
s151=Int('s151')
counter152=Int('counter152')
s.add(counter152==If(s151 == 50,counter151 + 152, counter151))
s152=Int('s152')
counter153=Int('counter153')
s.add(counter153==If(s152 == 50,counter152 + 153, counter152))
s153=Int('s153')
counter154=Int('counter154')
s.add(counter154==If(s153 == 50,counter153 + 154, counter153))
s154=Int('s154')
counter155=Int('counter155')
s.add(counter155==If(s154 == 50,counter154 + 155, counter154))
s155=Int('s155')
counter156=Int('counter156')
s.add(counter156==If(s155 == 50,counter155 + 156, counter155))
s156=Int('s156')
counter157=Int('counter157')
s.add(counter157==If(s156 == 50,counter156 + 157, counter156))
s157=Int('s157')
counter158=Int('counter158')
s.add(counter158==If(s157 == 50,counter157 + 158, counter157))
s158=Int('s158')
counter159=Int('counter159')
s.add(counter159==If(s158 == 50,counter158 + 159, counter158))
s159=Int('s159')
counter160=Int('counter160')
s.add(counter160==If(s159 == 50,counter159 + 160, counter159))
s160=Int('s160')
counter161=Int('counter161')
s.add(counter161==If(s160 == 50,counter160 + 161, counter160))
s161=Int('s161')
counter162=Int('counter162')
s.add(counter162==If(s161 == 50,counter161 + 162, counter161))
s162=Int('s162')
counter163=Int('counter163')
s.add(counter163==If(s162 == 50,counter162 + 163, counter162))
s163=Int('s163')
counter164=Int('counter164')
s.add(counter164==If(s163 == 50,counter163 + 164, counter163))
s164=Int('s164')
counter165=Int('counter165')
s.add(counter165==If(s164 == 50,counter164 + 165, counter164))
s165=Int('s165')
counter166=Int('counter166')
s.add(counter166==If(s165 == 50,counter165 + 166, counter165))
s166=Int('s166')
counter167=Int('counter167')
s.add(counter167==If(s166 == 50,counter166 + 167, counter166))
s167=Int('s167')
counter168=Int('counter168')
s.add(counter168==If(s167 == 50,counter167 + 168, counter167))
s168=Int('s168')
counter169=Int('counter169')
s.add(counter169==If(s168 == 50,counter168 + 169, counter168))
s169=Int('s169')
counter170=Int('counter170')
s.add(counter170==If(s169 == 50,counter169 + 170, counter169))
s170=Int('s170')
counter171=Int('counter171')
s.add(counter171==If(s170 == 50,counter170 + 171, counter170))
s171=Int('s171')
counter172=Int('counter172')
s.add(counter172==If(s171 == 50,counter171 + 172, counter171))
s172=Int('s172')
counter173=Int('counter173')
s.add(counter173==If(s172 == 50,counter172 + 173, counter172))
s173=Int('s173')
counter174=Int('counter174')
s.add(counter174==If(s173 == 50,counter173 + 174, counter173))
s174=Int('s174')
counter175=Int('counter175')
s.add(counter175==If(s174 == 50,counter174 + 175, counter174))
s175=Int('s175')
counter176=Int('counter176')
s.add(counter176==If(s175 == 50,counter175 + 176, counter175))
s176=Int('s176')
counter177=Int('counter177')
s.add(counter177==If(s176 == 50,counter176 + 177, counter176))
s177=Int('s177')
counter178=Int('counter178')
s.add(counter178==If(s177 == 50,counter177 + 178, counter177))
s178=Int('s178')
counter179=Int('counter179')
s.add(counter179==If(s178 == 50,counter178 + 179, counter178))
s179=Int('s179')
counter180=Int('counter180')
s.add(counter180==If(s179 == 50,counter179 + 180, counter179))
s180=Int('s180')
counter181=Int('counter181')
s.add(counter181==If(s180 == 50,counter180 + 181, counter180))
s181=Int('s181')
counter182=Int('counter182')
s.add(counter182==If(s181 == 50,counter181 + 182, counter181))
s182=Int('s182')
counter183=Int('counter183')
s.add(counter183==If(s182 == 50,counter182 + 183, counter182))
s183=Int('s183')
counter184=Int('counter184')
s.add(counter184==If(s183 == 50,counter183 + 184, counter183))
s184=Int('s184')
counter185=Int('counter185')
s.add(counter185==If(s184 == 50,counter184 + 185, counter184))
s185=Int('s185')
counter186=Int('counter186')
s.add(counter186==If(s185 == 50,counter185 + 186, counter185))
s186=Int('s186')
counter187=Int('counter187')
s.add(counter187==If(s186 == 50,counter186 + 187, counter186))
s187=Int('s187')
counter188=Int('counter188')
s.add(counter188==If(s187 == 50,counter187 + 188, counter187))
s188=Int('s188')
counter189=Int('counter189')
s.add(counter189==If(s188 == 50,counter188 + 189, counter188))
s189=Int('s189')
counter190=Int('counter190')
s.add(counter190==If(s189 == 50,counter189 + 190, counter189))
s190=Int('s190')
counter191=Int('counter191')
s.add(counter191==If(s190 == 50,counter190 + 191, counter190))
s191=Int('s191')
counter192=Int('counter192')
s.add(counter192==If(s191 == 50,counter191 + 192, counter191))
s192=Int('s192')
counter193=Int('counter193')
s.add(counter193==If(s192 == 50,counter192 + 193, counter192))
s193=Int('s193')
counter194=Int('counter194')
s.add(counter194==If(s193 == 50,counter193 + 194, counter193))
s194=Int('s194')
counter195=Int('counter195')
s.add(counter195==If(s194 == 50,counter194 + 195, counter194))
s195=Int('s195')
counter196=Int('counter196')
s.add(counter196==If(s195 == 50,counter195 + 196, counter195))
s196=Int('s196')
counter197=Int('counter197')
s.add(counter197==If(s196 == 50,counter196 + 197, counter196))
s197=Int('s197')
counter198=Int('counter198')
s.add(counter198==If(s197 == 50,counter197 + 198, counter197))
s198=Int('s198')
counter199=Int('counter199')
s.add(counter199==If(s198 == 50,counter198 + 199, counter198))
s199=Int('s199')
counter200=Int('counter200')
s.add(counter200==If(s199 == 50,counter199 + 200, counter199))
s200=Int('s200')

counter_final=Int('counter_final')
s.add(counter_final == 75)
s.add(counter_final == counter200)
x=s.check()
if(x == z3.sat):
	m = s.model()
	print m
else:
	print unsat
