#!/usr/bin/python

from z3 import *

def IntArr(prefix, sz, N):
  """Create a vector with N Bit-Vectors of size sz"""
  return [ BitVec('%s__%s' % (prefix, i), sz) for i in range(N) ]

def get_var_name(**kwargs): return kwargs.keys()[0]



def getElement(arr , idx, name1, name2, name3):
    #if type(idx) is int:
    #    return arr[idx]
#    name = name1+name2
#    symVar = Int(name)
    symVar = Int(name3)
    return symVar

def indexCheck(lhs, lhsName):
    #if type(lhs) is int:
    #    return ''
    #else:
    lhs  = Int(lhsName)
    #s.add(lhs ==rhs)
    s.add(lhs >= 0)

def getZ3VariableFromString(s, varString):
    if(s.check() != z3.sat):
        return None
    m = s.model()
    for c in m.decls():
        n = c.name()
        if n == varString:
            return c
    assert (0), "z3 String varString does not exist"

def addArrayConstraints(s):
    m = s.model()
    idxList = []
    arrList = []
    for c in m.decls():
        n = c.name()
        if n.count('t') == 2:
            print "#array element ", n, m[c]
            idx =  n[n.rfind("t"): len(n) ]
            print "#index taint = ", idx
            idxList.append(idx)
            arrList.append(n)
    print "#arrList = ", arrList
    print "#idxList = ", idxList
    for i in range(len(arrList)):
        obj_i_name = arrList[i]
        taint_i_name = obj_i_name[obj_i_name.rfind("t"): len(obj_i_name)]
        #obj_i = getZ3VariableFromString(s,obj_i_name)
        obj_i = get_var_name(obj_i_name=obj_i_name)
        #taint_i = getZ3VariableFromString(s,taint_i_name)
        taint_i = get_var_name(taint_i_name=taint_i_name)
        if obj_i is None or taint_i is None:
            print "#either obj_i ", obj_i_name, " or taint_i ", taint_i_name, " did not get instantiated" 
            return None
        for j in range(len(arrList)):
            if(i == j):
                continue
            obj_j_name = arrList[j]
            taint_j_name = obj_j_name[obj_j_name.rfind("t"): len(obj_j_name)]
            #obj_j = getZ3VariableFromString(s,obj_j_name)
            obj_j = get_var_name(obj_j_name=obj_j_name)
            #taint_j = getZ3VariableFromString(s,taint_j_name)
            taint_j = get_var_name(taint_j_name=taint_j_name)
            if obj_j is None or taint_j is None:
                print "#either obj_j ", obj_j_name, " or taint_j ", taint_j_name, " did not get instantiated"
                return None
            print "====BEFORE ADDING CONSTRAINT==="
            for c in s.assertions():
	        print c
            new_s = Solver()
            new_s = s
            new_s.add(Implies(obj_i != obj_j , taint_i != taint_j))
            print "====AFTER ADDING CONSTRAINT==="
            for c in new_s.assertions():
	        print c
            s = new_s
#            if(obj_i != obj_j):
#                print "#obj_i ", obj_i_name," obj_j ", obj_j_name, " are not equal"
#                print "adding constraint, i != j for taints ", taint_i_name, " and ", taint_j_name 
#         #       s.push()
#                print "====BEFORE ADDING CONSTRAINT==="
#            	for c in s.assertions():
#		    print c
#                s.add((taint_i != taint_j))
#                print "===AFTER ADDING CONSTRAINT==="
#            	for c in s.assertions():
#		    print c
#                if s.check() == z3.unsat:
#                    return None
#                #else:
#                #    print s.model()
    return s

def CharArr(prefix, sz, N):
  """Create a vector with N Bit-Vectors of size sz"""
  return [ BitVec('%s__%s' % (prefix, i), sz) for i in range(N) ]

def CharArr2D(prefix):
    return [[]]

def extendList(var, num, prefix):
    listSize = len(var)
    if num - listSize > 0:
        incrementSize = num-listSize
        for val in range(incrementSize):
            var.append( BitVec('%s__%s' % (prefix, listSize + val), 32))

def BitVectorToInt(var):
    if type(var) is int:    # if already int dont do anything
        return
    elif is_bv(var) and var.size() == 32: # if bitvector is int of size
        # 32, then return Integer equavalent
        ctx = var.ctx
        return ArithRef(Z3_mk_bv2int(ctx.ref(), var.as_ast(), 0), ctx)
    else:       # if bitvector is that of char, return as is
            # since all character operations happen on bitvector
        return var

def ConstIntArr(var, size):
#  	return [ BitVec('%s__%s' % (var, i), 32) for i in range(size) ]
    return []

def indexSanitizer(index, arrSize, s):
	s.push()
	s.add(index < 0)
	if(s.check() == z3.sat):
		print "NEGATIVE INDEX POSSIBLE"
		print (s.model())
	s.pop()
	
	s.push()
	s.add(index >= arrSize)
	if(s.check() == z3.sat):
		print "OVERFLOW INDEX POSSIBLE"
		print (s.model())
	s.pop()

	s.push()
	s.add(index >=0 , index < arrSize)
	if(s.check() != z3.sat):
		print "VALID ARRAY INDEX NOT POSSIBLE"
		s.pop()
		return -1
	else:
		index = s.model()[index]
		return index

set_param('smt.bv.enable_int2bv',True)

s = Solver()

op1=Int('op1')
negop1=Int('negop1')
s.add(op1==1)
s.add(negop1== -1)
op2=Int('op2')
negop2=Int('negop2')
s.add(op2==2)
s.add(negop2== -2)
op3=Int('op3')
negop3=Int('negop3')
s.add(op3==3)
s.add(negop3== -3)
op4=Int('op4')
negop4=Int('negop4')
s.add(op4==4)
s.add(negop4== -4)
op5=Int('op5')
negop5=Int('negop5')
s.add(op5==5)
s.add(negop5== -5)
op6=Int('op6')
negop6=Int('negop6')
s.add(op6==6)
s.add(negop6== -6)
op7=Int('op7')
negop7=Int('negop7')
s.add(op7==7)
s.add(negop7== -7)
op8=Int('op8')
negop8=Int('negop8')
s.add(op8==8)
s.add(negop8== -8)
op9=Int('op9')
negop9=Int('negop9')
s.add(op9==9)
s.add(negop9== -9)
op10=Int('op10')
negop10=Int('negop10')
s.add(op10==10)
s.add(negop10== -10)
op11=Int('op11')
negop11=Int('negop11')
s.add(op11==11)
s.add(negop11== -11)
op12=Int('op12')
negop12=Int('negop12')
s.add(op12==12)
s.add(negop12== -12)
op13=Int('op13')
negop13=Int('negop13')
s.add(op13==13)
s.add(negop13== -13)
op14=Int('op14')
negop14=Int('negop14')
s.add(op14==14)
s.add(negop14== -14)
op15=Int('op15')
negop15=Int('negop15')
s.add(op15==15)
s.add(negop15== -15)
op16=Int('op16')
negop16=Int('negop16')
s.add(op16==16)
s.add(negop16== -16)
op17=Int('op17')
negop17=Int('negop17')
s.add(op17==17)
s.add(negop17== -17)
op18=Int('op18')
negop18=Int('negop18')
s.add(op18==18)
s.add(negop18== -18)
op19=Int('op19')
negop19=Int('negop19')
s.add(op19==19)
s.add(negop19== -19)
op20=Int('op20')
negop20=Int('negop20')
s.add(op20==20)
s.add(negop20== -20)
op21=Int('op21')
negop21=Int('negop21')
s.add(op21==21)
s.add(negop21== -21)
op22=Int('op22')
negop22=Int('negop22')
s.add(op22==22)
s.add(negop22== -22)
op23=Int('op23')
negop23=Int('negop23')
s.add(op23==23)
s.add(negop23== -23)
op24=Int('op24')
negop24=Int('negop24')
s.add(op24==24)
s.add(negop24== -24)
op25=Int('op25')
negop25=Int('negop25')
s.add(op25==25)
s.add(negop25== -25)
op26=Int('op26')
negop26=Int('negop26')
s.add(op26==26)
s.add(negop26== -26)
op27=Int('op27')
negop27=Int('negop27')
s.add(op27==27)
s.add(negop27== -27)
op28=Int('op28')
negop28=Int('negop28')
s.add(op28==28)
s.add(negop28== -28)
op29=Int('op29')
negop29=Int('negop29')
s.add(op29==29)
s.add(negop29== -29)
op30=Int('op30')
negop30=Int('negop30')
s.add(op30==30)
s.add(negop30== -30)
op31=Int('op31')
negop31=Int('negop31')
s.add(op31==31)
s.add(negop31== -31)
op32=Int('op32')
negop32=Int('negop32')
s.add(op32==32)
s.add(negop32== -32)
op33=Int('op33')
negop33=Int('negop33')
s.add(op33==33)
s.add(negop33== -33)
op34=Int('op34')
negop34=Int('negop34')
s.add(op34==34)
s.add(negop34== -34)
op35=Int('op35')
negop35=Int('negop35')
s.add(op35==35)
s.add(negop35== -35)
op36=Int('op36')
negop36=Int('negop36')
s.add(op36==36)
s.add(negop36== -36)
op37=Int('op37')
negop37=Int('negop37')
s.add(op37==37)
s.add(negop37== -37)
op38=Int('op38')
negop38=Int('negop38')
s.add(op38==38)
s.add(negop38== -38)
op39=Int('op39')
negop39=Int('negop39')
s.add(op39==39)
s.add(negop39== -39)
op40=Int('op40')
negop40=Int('negop40')
s.add(op40==40)
s.add(negop40== -40)
op41=Int('op41')
negop41=Int('negop41')
s.add(op41==41)
s.add(negop41== -41)
op42=Int('op42')
negop42=Int('negop42')
s.add(op42==42)
s.add(negop42== -42)
op43=Int('op43')
negop43=Int('negop43')
s.add(op43==43)
s.add(negop43== -43)
op44=Int('op44')
negop44=Int('negop44')
s.add(op44==44)
s.add(negop44== -44)
op45=Int('op45')
negop45=Int('negop45')
s.add(op45==45)
s.add(negop45== -45)
op46=Int('op46')
negop46=Int('negop46')
s.add(op46==46)
s.add(negop46== -46)
op47=Int('op47')
negop47=Int('negop47')
s.add(op47==47)
s.add(negop47== -47)
op48=Int('op48')
negop48=Int('negop48')
s.add(op48==48)
s.add(negop48== -48)
op49=Int('op49')
negop49=Int('negop49')
s.add(op49==49)
s.add(negop49== -49)
op50=Int('op50')
negop50=Int('negop50')
s.add(op50==50)
s.add(negop50== -50)
op51=Int('op51')
negop51=Int('negop51')
s.add(op51==51)
s.add(negop51== -51)
op52=Int('op52')
negop52=Int('negop52')
s.add(op52==52)
s.add(negop52== -52)
op53=Int('op53')
negop53=Int('negop53')
s.add(op53==53)
s.add(negop53== -53)
op54=Int('op54')
negop54=Int('negop54')
s.add(op54==54)
s.add(negop54== -54)
op55=Int('op55')
negop55=Int('negop55')
s.add(op55==55)
s.add(negop55== -55)
op56=Int('op56')
negop56=Int('negop56')
s.add(op56==56)
s.add(negop56== -56)
op57=Int('op57')
negop57=Int('negop57')
s.add(op57==57)
s.add(negop57== -57)
op58=Int('op58')
negop58=Int('negop58')
s.add(op58==58)
s.add(negop58== -58)
op59=Int('op59')
negop59=Int('negop59')
s.add(op59==59)
s.add(negop59== -59)
op60=Int('op60')
negop60=Int('negop60')
s.add(op60==60)
s.add(negop60== -60)
op61=Int('op61')
negop61=Int('negop61')
s.add(op61==61)
s.add(negop61== -61)
op62=Int('op62')
negop62=Int('negop62')
s.add(op62==62)
s.add(negop62== -62)
op63=Int('op63')
negop63=Int('negop63')
s.add(op63==63)
s.add(negop63== -63)
op64=Int('op64')
negop64=Int('negop64')
s.add(op64==64)
s.add(negop64== -64)
op65=Int('op65')
negop65=Int('negop65')
s.add(op65==65)
s.add(negop65== -65)
op66=Int('op66')
negop66=Int('negop66')
s.add(op66==66)
s.add(negop66== -66)
op67=Int('op67')
negop67=Int('negop67')
s.add(op67==67)
s.add(negop67== -67)
op68=Int('op68')
negop68=Int('negop68')
s.add(op68==68)
s.add(negop68== -68)
op69=Int('op69')
negop69=Int('negop69')
s.add(op69==69)
s.add(negop69== -69)
op70=Int('op70')
negop70=Int('negop70')
s.add(op70==70)
s.add(negop70== -70)
op71=Int('op71')
negop71=Int('negop71')
s.add(op71==71)
s.add(negop71== -71)
op72=Int('op72')
negop72=Int('negop72')
s.add(op72==72)
s.add(negop72== -72)
op73=Int('op73')
negop73=Int('negop73')
s.add(op73==73)
s.add(negop73== -73)
op74=Int('op74')
negop74=Int('negop74')
s.add(op74==74)
s.add(negop74== -74)
op75=Int('op75')
negop75=Int('negop75')
s.add(op75==75)
s.add(negop75== -75)
op76=Int('op76')
negop76=Int('negop76')
s.add(op76==76)
s.add(negop76== -76)
op77=Int('op77')
negop77=Int('negop77')
s.add(op77==77)
s.add(negop77== -77)
op78=Int('op78')
negop78=Int('negop78')
s.add(op78==78)
s.add(negop78== -78)
op79=Int('op79')
negop79=Int('negop79')
s.add(op79==79)
s.add(negop79== -79)
op80=Int('op80')
negop80=Int('negop80')
s.add(op80==80)
s.add(negop80== -80)
op81=Int('op81')
negop81=Int('negop81')
s.add(op81==81)
s.add(negop81== -81)
op82=Int('op82')
negop82=Int('negop82')
s.add(op82==82)
s.add(negop82== -82)
op83=Int('op83')
negop83=Int('negop83')
s.add(op83==83)
s.add(negop83== -83)
op84=Int('op84')
negop84=Int('negop84')
s.add(op84==84)
s.add(negop84== -84)
op85=Int('op85')
negop85=Int('negop85')
s.add(op85==85)
s.add(negop85== -85)
op86=Int('op86')
negop86=Int('negop86')
s.add(op86==86)
s.add(negop86== -86)
op87=Int('op87')
negop87=Int('negop87')
s.add(op87==87)
s.add(negop87== -87)
op88=Int('op88')
negop88=Int('negop88')
s.add(op88==88)
s.add(negop88== -88)
op89=Int('op89')
negop89=Int('negop89')
s.add(op89==89)
s.add(negop89== -89)
op90=Int('op90')
negop90=Int('negop90')
s.add(op90==90)
s.add(negop90== -90)
op91=Int('op91')
negop91=Int('negop91')
s.add(op91==91)
s.add(negop91== -91)
op92=Int('op92')
negop92=Int('negop92')
s.add(op92==92)
s.add(negop92== -92)
op93=Int('op93')
negop93=Int('negop93')
s.add(op93==93)
s.add(negop93== -93)
op94=Int('op94')
negop94=Int('negop94')
s.add(op94==94)
s.add(negop94== -94)
op95=Int('op95')
negop95=Int('negop95')
s.add(op95==95)
s.add(negop95== -95)
op96=Int('op96')
negop96=Int('negop96')
s.add(op96==96)
s.add(negop96== -96)
op97=Int('op97')
negop97=Int('negop97')
s.add(op97==97)
s.add(negop97== -97)
op98=Int('op98')
negop98=Int('negop98')
s.add(op98==98)
s.add(negop98== -98)
op99=Int('op99')
negop99=Int('negop99')
s.add(op99==99)
s.add(negop99== -99)
op100=Int('op100')
negop100=Int('negop100')
s.add(op100==100)
s.add(negop100== -100)

count1=Int('count1')
negcount1=Int('negcount1')
s.add(count1 <= 1)
s.add(count1 >= 0)
s.add(negcount1 <= 1)
s.add(negcount1 >= 0)
count2=Int('count2')
negcount2=Int('negcount2')
s.add(count2 <= 1)
s.add(count2 >= 0)
s.add(negcount2 <= 1)
s.add(negcount2 >= 0)
count3=Int('count3')
negcount3=Int('negcount3')
s.add(count3 <= 1)
s.add(count3 >= 0)
s.add(negcount3 <= 1)
s.add(negcount3 >= 0)
count4=Int('count4')
negcount4=Int('negcount4')
s.add(count4 <= 1)
s.add(count4 >= 0)
s.add(negcount4 <= 1)
s.add(negcount4 >= 0)
count5=Int('count5')
negcount5=Int('negcount5')
s.add(count5 <= 1)
s.add(count5 >= 0)
s.add(negcount5 <= 1)
s.add(negcount5 >= 0)
count6=Int('count6')
negcount6=Int('negcount6')
s.add(count6 <= 1)
s.add(count6 >= 0)
s.add(negcount6 <= 1)
s.add(negcount6 >= 0)
count7=Int('count7')
negcount7=Int('negcount7')
s.add(count7 <= 1)
s.add(count7 >= 0)
s.add(negcount7 <= 1)
s.add(negcount7 >= 0)
count8=Int('count8')
negcount8=Int('negcount8')
s.add(count8 <= 1)
s.add(count8 >= 0)
s.add(negcount8 <= 1)
s.add(negcount8 >= 0)
count9=Int('count9')
negcount9=Int('negcount9')
s.add(count9 <= 1)
s.add(count9 >= 0)
s.add(negcount9 <= 1)
s.add(negcount9 >= 0)
count10=Int('count10')
negcount10=Int('negcount10')
s.add(count10 <= 1)
s.add(count10 >= 0)
s.add(negcount10 <= 1)
s.add(negcount10 >= 0)
count11=Int('count11')
negcount11=Int('negcount11')
s.add(count11 <= 1)
s.add(count11 >= 0)
s.add(negcount11 <= 1)
s.add(negcount11 >= 0)
count12=Int('count12')
negcount12=Int('negcount12')
s.add(count12 <= 1)
s.add(count12 >= 0)
s.add(negcount12 <= 1)
s.add(negcount12 >= 0)
count13=Int('count13')
negcount13=Int('negcount13')
s.add(count13 <= 1)
s.add(count13 >= 0)
s.add(negcount13 <= 1)
s.add(negcount13 >= 0)
count14=Int('count14')
negcount14=Int('negcount14')
s.add(count14 <= 1)
s.add(count14 >= 0)
s.add(negcount14 <= 1)
s.add(negcount14 >= 0)
count15=Int('count15')
negcount15=Int('negcount15')
s.add(count15 <= 1)
s.add(count15 >= 0)
s.add(negcount15 <= 1)
s.add(negcount15 >= 0)
count16=Int('count16')
negcount16=Int('negcount16')
s.add(count16 <= 1)
s.add(count16 >= 0)
s.add(negcount16 <= 1)
s.add(negcount16 >= 0)
count17=Int('count17')
negcount17=Int('negcount17')
s.add(count17 <= 1)
s.add(count17 >= 0)
s.add(negcount17 <= 1)
s.add(negcount17 >= 0)
count18=Int('count18')
negcount18=Int('negcount18')
s.add(count18 <= 1)
s.add(count18 >= 0)
s.add(negcount18 <= 1)
s.add(negcount18 >= 0)
count19=Int('count19')
negcount19=Int('negcount19')
s.add(count19 <= 1)
s.add(count19 >= 0)
s.add(negcount19 <= 1)
s.add(negcount19 >= 0)
count20=Int('count20')
negcount20=Int('negcount20')
s.add(count20 <= 1)
s.add(count20 >= 0)
s.add(negcount20 <= 1)
s.add(negcount20 >= 0)
count21=Int('count21')
negcount21=Int('negcount21')
s.add(count21 <= 1)
s.add(count21 >= 0)
s.add(negcount21 <= 1)
s.add(negcount21 >= 0)
count22=Int('count22')
negcount22=Int('negcount22')
s.add(count22 <= 1)
s.add(count22 >= 0)
s.add(negcount22 <= 1)
s.add(negcount22 >= 0)
count23=Int('count23')
negcount23=Int('negcount23')
s.add(count23 <= 1)
s.add(count23 >= 0)
s.add(negcount23 <= 1)
s.add(negcount23 >= 0)
count24=Int('count24')
negcount24=Int('negcount24')
s.add(count24 <= 1)
s.add(count24 >= 0)
s.add(negcount24 <= 1)
s.add(negcount24 >= 0)
count25=Int('count25')
negcount25=Int('negcount25')
s.add(count25 <= 1)
s.add(count25 >= 0)
s.add(negcount25 <= 1)
s.add(negcount25 >= 0)
count26=Int('count26')
negcount26=Int('negcount26')
s.add(count26 <= 1)
s.add(count26 >= 0)
s.add(negcount26 <= 1)
s.add(negcount26 >= 0)
count27=Int('count27')
negcount27=Int('negcount27')
s.add(count27 <= 1)
s.add(count27 >= 0)
s.add(negcount27 <= 1)
s.add(negcount27 >= 0)
count28=Int('count28')
negcount28=Int('negcount28')
s.add(count28 <= 1)
s.add(count28 >= 0)
s.add(negcount28 <= 1)
s.add(negcount28 >= 0)
count29=Int('count29')
negcount29=Int('negcount29')
s.add(count29 <= 1)
s.add(count29 >= 0)
s.add(negcount29 <= 1)
s.add(negcount29 >= 0)
count30=Int('count30')
negcount30=Int('negcount30')
s.add(count30 <= 1)
s.add(count30 >= 0)
s.add(negcount30 <= 1)
s.add(negcount30 >= 0)
count31=Int('count31')
negcount31=Int('negcount31')
s.add(count31 <= 1)
s.add(count31 >= 0)
s.add(negcount31 <= 1)
s.add(negcount31 >= 0)
count32=Int('count32')
negcount32=Int('negcount32')
s.add(count32 <= 1)
s.add(count32 >= 0)
s.add(negcount32 <= 1)
s.add(negcount32 >= 0)
count33=Int('count33')
negcount33=Int('negcount33')
s.add(count33 <= 1)
s.add(count33 >= 0)
s.add(negcount33 <= 1)
s.add(negcount33 >= 0)
count34=Int('count34')
negcount34=Int('negcount34')
s.add(count34 <= 1)
s.add(count34 >= 0)
s.add(negcount34 <= 1)
s.add(negcount34 >= 0)
count35=Int('count35')
negcount35=Int('negcount35')
s.add(count35 <= 1)
s.add(count35 >= 0)
s.add(negcount35 <= 1)
s.add(negcount35 >= 0)
count36=Int('count36')
negcount36=Int('negcount36')
s.add(count36 <= 1)
s.add(count36 >= 0)
s.add(negcount36 <= 1)
s.add(negcount36 >= 0)
count37=Int('count37')
negcount37=Int('negcount37')
s.add(count37 <= 1)
s.add(count37 >= 0)
s.add(negcount37 <= 1)
s.add(negcount37 >= 0)
count38=Int('count38')
negcount38=Int('negcount38')
s.add(count38 <= 1)
s.add(count38 >= 0)
s.add(negcount38 <= 1)
s.add(negcount38 >= 0)
count39=Int('count39')
negcount39=Int('negcount39')
s.add(count39 <= 1)
s.add(count39 >= 0)
s.add(negcount39 <= 1)
s.add(negcount39 >= 0)
count40=Int('count40')
negcount40=Int('negcount40')
s.add(count40 <= 1)
s.add(count40 >= 0)
s.add(negcount40 <= 1)
s.add(negcount40 >= 0)
count41=Int('count41')
negcount41=Int('negcount41')
s.add(count41 <= 1)
s.add(count41 >= 0)
s.add(negcount41 <= 1)
s.add(negcount41 >= 0)
count42=Int('count42')
negcount42=Int('negcount42')
s.add(count42 <= 1)
s.add(count42 >= 0)
s.add(negcount42 <= 1)
s.add(negcount42 >= 0)
count43=Int('count43')
negcount43=Int('negcount43')
s.add(count43 <= 1)
s.add(count43 >= 0)
s.add(negcount43 <= 1)
s.add(negcount43 >= 0)
count44=Int('count44')
negcount44=Int('negcount44')
s.add(count44 <= 1)
s.add(count44 >= 0)
s.add(negcount44 <= 1)
s.add(negcount44 >= 0)
count45=Int('count45')
negcount45=Int('negcount45')
s.add(count45 <= 1)
s.add(count45 >= 0)
s.add(negcount45 <= 1)
s.add(negcount45 >= 0)
count46=Int('count46')
negcount46=Int('negcount46')
s.add(count46 <= 1)
s.add(count46 >= 0)
s.add(negcount46 <= 1)
s.add(negcount46 >= 0)
count47=Int('count47')
negcount47=Int('negcount47')
s.add(count47 <= 1)
s.add(count47 >= 0)
s.add(negcount47 <= 1)
s.add(negcount47 >= 0)
count48=Int('count48')
negcount48=Int('negcount48')
s.add(count48 <= 1)
s.add(count48 >= 0)
s.add(negcount48 <= 1)
s.add(negcount48 >= 0)
count49=Int('count49')
negcount49=Int('negcount49')
s.add(count49 <= 1)
s.add(count49 >= 0)
s.add(negcount49 <= 1)
s.add(negcount49 >= 0)
count50=Int('count50')
negcount50=Int('negcount50')
s.add(count50 <= 1)
s.add(count50 >= 0)
s.add(negcount50 <= 1)
s.add(negcount50 >= 0)
count51=Int('count51')
negcount51=Int('negcount51')
s.add(count51 <= 1)
s.add(count51 >= 0)
s.add(negcount51 <= 1)
s.add(negcount51 >= 0)
count52=Int('count52')
negcount52=Int('negcount52')
s.add(count52 <= 1)
s.add(count52 >= 0)
s.add(negcount52 <= 1)
s.add(negcount52 >= 0)
count53=Int('count53')
negcount53=Int('negcount53')
s.add(count53 <= 1)
s.add(count53 >= 0)
s.add(negcount53 <= 1)
s.add(negcount53 >= 0)
count54=Int('count54')
negcount54=Int('negcount54')
s.add(count54 <= 1)
s.add(count54 >= 0)
s.add(negcount54 <= 1)
s.add(negcount54 >= 0)
count55=Int('count55')
negcount55=Int('negcount55')
s.add(count55 <= 1)
s.add(count55 >= 0)
s.add(negcount55 <= 1)
s.add(negcount55 >= 0)
count56=Int('count56')
negcount56=Int('negcount56')
s.add(count56 <= 1)
s.add(count56 >= 0)
s.add(negcount56 <= 1)
s.add(negcount56 >= 0)
count57=Int('count57')
negcount57=Int('negcount57')
s.add(count57 <= 1)
s.add(count57 >= 0)
s.add(negcount57 <= 1)
s.add(negcount57 >= 0)
count58=Int('count58')
negcount58=Int('negcount58')
s.add(count58 <= 1)
s.add(count58 >= 0)
s.add(negcount58 <= 1)
s.add(negcount58 >= 0)
count59=Int('count59')
negcount59=Int('negcount59')
s.add(count59 <= 1)
s.add(count59 >= 0)
s.add(negcount59 <= 1)
s.add(negcount59 >= 0)
count60=Int('count60')
negcount60=Int('negcount60')
s.add(count60 <= 1)
s.add(count60 >= 0)
s.add(negcount60 <= 1)
s.add(negcount60 >= 0)
count61=Int('count61')
negcount61=Int('negcount61')
s.add(count61 <= 1)
s.add(count61 >= 0)
s.add(negcount61 <= 1)
s.add(negcount61 >= 0)
count62=Int('count62')
negcount62=Int('negcount62')
s.add(count62 <= 1)
s.add(count62 >= 0)
s.add(negcount62 <= 1)
s.add(negcount62 >= 0)
count63=Int('count63')
negcount63=Int('negcount63')
s.add(count63 <= 1)
s.add(count63 >= 0)
s.add(negcount63 <= 1)
s.add(negcount63 >= 0)
count64=Int('count64')
negcount64=Int('negcount64')
s.add(count64 <= 1)
s.add(count64 >= 0)
s.add(negcount64 <= 1)
s.add(negcount64 >= 0)
count65=Int('count65')
negcount65=Int('negcount65')
s.add(count65 <= 1)
s.add(count65 >= 0)
s.add(negcount65 <= 1)
s.add(negcount65 >= 0)
count66=Int('count66')
negcount66=Int('negcount66')
s.add(count66 <= 1)
s.add(count66 >= 0)
s.add(negcount66 <= 1)
s.add(negcount66 >= 0)
count67=Int('count67')
negcount67=Int('negcount67')
s.add(count67 <= 1)
s.add(count67 >= 0)
s.add(negcount67 <= 1)
s.add(negcount67 >= 0)
count68=Int('count68')
negcount68=Int('negcount68')
s.add(count68 <= 1)
s.add(count68 >= 0)
s.add(negcount68 <= 1)
s.add(negcount68 >= 0)
count69=Int('count69')
negcount69=Int('negcount69')
s.add(count69 <= 1)
s.add(count69 >= 0)
s.add(negcount69 <= 1)
s.add(negcount69 >= 0)
count70=Int('count70')
negcount70=Int('negcount70')
s.add(count70 <= 1)
s.add(count70 >= 0)
s.add(negcount70 <= 1)
s.add(negcount70 >= 0)
count71=Int('count71')
negcount71=Int('negcount71')
s.add(count71 <= 1)
s.add(count71 >= 0)
s.add(negcount71 <= 1)
s.add(negcount71 >= 0)
count72=Int('count72')
negcount72=Int('negcount72')
s.add(count72 <= 1)
s.add(count72 >= 0)
s.add(negcount72 <= 1)
s.add(negcount72 >= 0)
count73=Int('count73')
negcount73=Int('negcount73')
s.add(count73 <= 1)
s.add(count73 >= 0)
s.add(negcount73 <= 1)
s.add(negcount73 >= 0)
count74=Int('count74')
negcount74=Int('negcount74')
s.add(count74 <= 1)
s.add(count74 >= 0)
s.add(negcount74 <= 1)
s.add(negcount74 >= 0)
count75=Int('count75')
negcount75=Int('negcount75')
s.add(count75 <= 1)
s.add(count75 >= 0)
s.add(negcount75 <= 1)
s.add(negcount75 >= 0)
count76=Int('count76')
negcount76=Int('negcount76')
s.add(count76 <= 1)
s.add(count76 >= 0)
s.add(negcount76 <= 1)
s.add(negcount76 >= 0)
count77=Int('count77')
negcount77=Int('negcount77')
s.add(count77 <= 1)
s.add(count77 >= 0)
s.add(negcount77 <= 1)
s.add(negcount77 >= 0)
count78=Int('count78')
negcount78=Int('negcount78')
s.add(count78 <= 1)
s.add(count78 >= 0)
s.add(negcount78 <= 1)
s.add(negcount78 >= 0)
count79=Int('count79')
negcount79=Int('negcount79')
s.add(count79 <= 1)
s.add(count79 >= 0)
s.add(negcount79 <= 1)
s.add(negcount79 >= 0)
count80=Int('count80')
negcount80=Int('negcount80')
s.add(count80 <= 1)
s.add(count80 >= 0)
s.add(negcount80 <= 1)
s.add(negcount80 >= 0)
count81=Int('count81')
negcount81=Int('negcount81')
s.add(count81 <= 1)
s.add(count81 >= 0)
s.add(negcount81 <= 1)
s.add(negcount81 >= 0)
count82=Int('count82')
negcount82=Int('negcount82')
s.add(count82 <= 1)
s.add(count82 >= 0)
s.add(negcount82 <= 1)
s.add(negcount82 >= 0)
count83=Int('count83')
negcount83=Int('negcount83')
s.add(count83 <= 1)
s.add(count83 >= 0)
s.add(negcount83 <= 1)
s.add(negcount83 >= 0)
count84=Int('count84')
negcount84=Int('negcount84')
s.add(count84 <= 1)
s.add(count84 >= 0)
s.add(negcount84 <= 1)
s.add(negcount84 >= 0)
count85=Int('count85')
negcount85=Int('negcount85')
s.add(count85 <= 1)
s.add(count85 >= 0)
s.add(negcount85 <= 1)
s.add(negcount85 >= 0)
count86=Int('count86')
negcount86=Int('negcount86')
s.add(count86 <= 1)
s.add(count86 >= 0)
s.add(negcount86 <= 1)
s.add(negcount86 >= 0)
count87=Int('count87')
negcount87=Int('negcount87')
s.add(count87 <= 1)
s.add(count87 >= 0)
s.add(negcount87 <= 1)
s.add(negcount87 >= 0)
count88=Int('count88')
negcount88=Int('negcount88')
s.add(count88 <= 1)
s.add(count88 >= 0)
s.add(negcount88 <= 1)
s.add(negcount88 >= 0)
count89=Int('count89')
negcount89=Int('negcount89')
s.add(count89 <= 1)
s.add(count89 >= 0)
s.add(negcount89 <= 1)
s.add(negcount89 >= 0)
count90=Int('count90')
negcount90=Int('negcount90')
s.add(count90 <= 1)
s.add(count90 >= 0)
s.add(negcount90 <= 1)
s.add(negcount90 >= 0)
count91=Int('count91')
negcount91=Int('negcount91')
s.add(count91 <= 1)
s.add(count91 >= 0)
s.add(negcount91 <= 1)
s.add(negcount91 >= 0)
count92=Int('count92')
negcount92=Int('negcount92')
s.add(count92 <= 1)
s.add(count92 >= 0)
s.add(negcount92 <= 1)
s.add(negcount92 >= 0)
count93=Int('count93')
negcount93=Int('negcount93')
s.add(count93 <= 1)
s.add(count93 >= 0)
s.add(negcount93 <= 1)
s.add(negcount93 >= 0)
count94=Int('count94')
negcount94=Int('negcount94')
s.add(count94 <= 1)
s.add(count94 >= 0)
s.add(negcount94 <= 1)
s.add(negcount94 >= 0)
count95=Int('count95')
negcount95=Int('negcount95')
s.add(count95 <= 1)
s.add(count95 >= 0)
s.add(negcount95 <= 1)
s.add(negcount95 >= 0)
count96=Int('count96')
negcount96=Int('negcount96')
s.add(count96 <= 1)
s.add(count96 >= 0)
s.add(negcount96 <= 1)
s.add(negcount96 >= 0)
count97=Int('count97')
negcount97=Int('negcount97')
s.add(count97 <= 1)
s.add(count97 >= 0)
s.add(negcount97 <= 1)
s.add(negcount97 >= 0)
count98=Int('count98')
negcount98=Int('negcount98')
s.add(count98 <= 1)
s.add(count98 >= 0)
s.add(negcount98 <= 1)
s.add(negcount98 >= 0)
count99=Int('count99')
negcount99=Int('negcount99')
s.add(count99 <= 1)
s.add(count99 >= 0)
s.add(negcount99 <= 1)
s.add(negcount99 >= 0)
count100=Int('count100')
negcount100=Int('negcount100')
s.add(count100 <= 1)
s.add(count100 >= 0)
s.add(negcount100 <= 1)
s.add(negcount100 >= 0)

s.add(count1 * op1 + negcount1 * negop1 + count2 * op2 + negcount2 * negop2 + count3 * op3 + negcount3 * negop3 + count4 * op4 + negcount4 * negop4 + count5 * op5 + negcount5 * negop5 + count6 * op6 + negcount6 * negop6 + count7 * op7 + negcount7 * negop7 + count8 * op8 + negcount8 * negop8 + count9 * op9 + negcount9 * negop9 + count10 * op10 + negcount10 * negop10 + count11 * op11 + negcount11 * negop11 + count12 * op12 + negcount12 * negop12 + count13 * op13 + negcount13 * negop13 + count14 * op14 + negcount14 * negop14 + count15 * op15 + negcount15 * negop15 + count16 * op16 + negcount16 * negop16 + count17 * op17 + negcount17 * negop17 + count18 * op18 + negcount18 * negop18 + count19 * op19 + negcount19 * negop19 + count20 * op20 + negcount20 * negop20 + count21 * op21 + negcount21 * negop21 + count22 * op22 + negcount22 * negop22 + count23 * op23 + negcount23 * negop23 + count24 * op24 + negcount24 * negop24 + count25 * op25 + negcount25 * negop25 + count26 * op26 + negcount26 * negop26 + count27 * op27 + negcount27 * negop27 + count28 * op28 + negcount28 * negop28 + count29 * op29 + negcount29 * negop29 + count30 * op30 + negcount30 * negop30 + count31 * op31 + negcount31 * negop31 + count32 * op32 + negcount32 * negop32 + count33 * op33 + negcount33 * negop33 + count34 * op34 + negcount34 * negop34 + count35 * op35 + negcount35 * negop35 + count36 * op36 + negcount36 * negop36 + count37 * op37 + negcount37 * negop37 + count38 * op38 + negcount38 * negop38 + count39 * op39 + negcount39 * negop39 + count40 * op40 + negcount40 * negop40 + count41 * op41 + negcount41 * negop41 + count42 * op42 + negcount42 * negop42 + count43 * op43 + negcount43 * negop43 + count44 * op44 + negcount44 * negop44 + count45 * op45 + negcount45 * negop45 + count46 * op46 + negcount46 * negop46 + count47 * op47 + negcount47 * negop47 + count48 * op48 + negcount48 * negop48 + count49 * op49 + negcount49 * negop49 + count50 * op50 + negcount50 * negop50 + count51 * op51 + negcount51 * negop51 + count52 * op52 + negcount52 * negop52 + count53 * op53 + negcount53 * negop53 + count54 * op54 + negcount54 * negop54 + count55 * op55 + negcount55 * negop55 + count56 * op56 + negcount56 * negop56 + count57 * op57 + negcount57 * negop57 + count58 * op58 + negcount58 * negop58 + count59 * op59 + negcount59 * negop59 + count60 * op60 + negcount60 * negop60 + count61 * op61 + negcount61 * negop61 + count62 * op62 + negcount62 * negop62 + count63 * op63 + negcount63 * negop63 + count64 * op64 + negcount64 * negop64 + count65 * op65 + negcount65 * negop65 + count66 * op66 + negcount66 * negop66 + count67 * op67 + negcount67 * negop67 + count68 * op68 + negcount68 * negop68 + count69 * op69 + negcount69 * negop69 + count70 * op70 + negcount70 * negop70 + count71 * op71 + negcount71 * negop71 + count72 * op72 + negcount72 * negop72 + count73 * op73 + negcount73 * negop73 + count74 * op74 + negcount74 * negop74 + count75 * op75 + negcount75 * negop75 + count76 * op76 + negcount76 * negop76 + count77 * op77 + negcount77 * negop77 + count78 * op78 + negcount78 * negop78 + count79 * op79 + negcount79 * negop79 + count80 * op80 + negcount80 * negop80 + count81 * op81 + negcount81 * negop81 + count82 * op82 + negcount82 * negop82 + count83 * op83 + negcount83 * negop83 + count84 * op84 + negcount84 * negop84 + count85 * op85 + negcount85 * negop85 + count86 * op86 + negcount86 * negop86 + count87 * op87 + negcount87 * negop87 + count88 * op88 + negcount88 * negop88 + count89 * op89 + negcount89 * negop89 + count90 * op90 + negcount90 * negop90 + count91 * op91 + negcount91 * negop91 + count92 * op92 + negcount92 * negop92 + count93 * op93 + negcount93 * negop93 + count94 * op94 + negcount94 * negop94 + count95 * op95 + negcount95 * negop95 + count96 * op96 + negcount96 * negop96 + count97 * op97 + negcount97 * negop97 + count98 * op98 + negcount98 * negop98 + count99 * op99 + negcount99 * negop99 + count100 * op100 + negcount100 * negop100 == 75) 


x=s.check()
if(x == z3.sat):
	m = s.model()
	print m
else:
	print unsat

