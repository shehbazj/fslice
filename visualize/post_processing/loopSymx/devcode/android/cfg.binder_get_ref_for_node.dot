digraph "CFG for 'binder_get_ref_for_node' function" {
	label="CFG for 'binder_get_ref_for_node' function";

	Node0x4664090 [shape=record,label="{entry:\l  %proc.addr = alloca %struct.binder_proc*, align 8\l  %node.addr = alloca %struct.binder_node*, align 8\l  %n = alloca %struct.rb_node*, align 8\l  %p = alloca %struct.rb_node**, align 8\l  %parent = alloca %struct.rb_node*, align 8\l  %ref = alloca %struct.binder_ref*, align 8\l  %new_ref = alloca %struct.binder_ref*, align 8\l  %context = alloca %struct.binder_context*, align 8\l  store %struct.binder_proc* %proc, %struct.binder_proc** %proc.addr, align 8\l  store %struct.binder_node* %node, %struct.binder_node** %node.addr, align 8\l  %0 = load %struct.binder_proc** %proc.addr, align 8\l  %refs_by_node = getelementptr inbounds %struct.binder_proc* %0, i32 0, i32 4\l  %rb_node = getelementptr inbounds %struct.rb_root* %refs_by_node, i32 0, i32\l... 0\l  store %struct.rb_node** %rb_node, %struct.rb_node*** %p, align 8\l  store %struct.rb_node* null, %struct.rb_node** %parent, align 8\l  %1 = load %struct.binder_proc** %proc.addr, align 8\l  %context1 = getelementptr inbounds %struct.binder_proc* %1, i32 0, i32 31\l  %2 = load %struct.binder_context** %context1, align 8\l  store %struct.binder_context* %2, %struct.binder_context** %context, align 8\l  %3 = load %struct.binder_proc** %proc.addr, align 8\l  %refs_by_desc = getelementptr inbounds %struct.binder_proc* %3, i32 0, i32 3\l  %call = call %struct.rb_node* @rb_first(%struct.rb_root* %refs_by_desc)\l  store %struct.rb_node* %call, %struct.rb_node** %n, align 8\l  br label %for.cond\l}"];
	Node0x4664090 -> Node0x46640f0;
	Node0x46640f0 [shape=record,label="{for.cond:                                         \l  %4 = load %struct.rb_node** %n, align 8\l  %cmp = icmp ne %struct.rb_node* %4, null\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x46640f0:s0 -> Node0x4664150;
	Node0x46640f0:s1 -> Node0x46642d0;
	Node0x4664150 [shape=record,label="{for.body:                                         \l  %5 = load %struct.rb_node** %n, align 8\l  %6 = bitcast %struct.rb_node* %5 to i8*\l  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64\l  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint (%struct.rb_node*\l... getelementptr inbounds (%struct.binder_ref* null, i32 0, i32 1) to i64)\l  %7 = inttoptr i64 %sub.ptr.sub to %struct.binder_ref*\l  store %struct.binder_ref* %7, %struct.binder_ref** %ref, align 8\l  %8 = load %struct.binder_ref** %ref, align 8\l  %desc = getelementptr inbounds %struct.binder_ref* %8, i32 0, i32 6\l  %9 = load i32* %desc, align 4\l  %10 = load %struct.binder_ref** %new_ref, align 8\l  %desc2 = getelementptr inbounds %struct.binder_ref* %10, i32 0, i32 6\l  %11 = load i32* %desc2, align 4\l  %cmp3 = icmp ugt i32 %9, %11\l  br i1 %cmp3, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x4664150:s0 -> Node0x46641b0;
	Node0x4664150:s1 -> Node0x4664210;
	Node0x46641b0 [shape=record,label="{if.then:                                          \l  br label %for.end\l}"];
	Node0x46641b0 -> Node0x46642d0;
	Node0x4664210 [shape=record,label="{if.end:                                           \l  %12 = load %struct.binder_ref** %ref, align 8\l  %desc4 = getelementptr inbounds %struct.binder_ref* %12, i32 0, i32 6\l  %13 = load i32* %desc4, align 4\l  %add = add i32 %13, 1\l  %14 = load %struct.binder_ref** %new_ref, align 8\l  %desc5 = getelementptr inbounds %struct.binder_ref* %14, i32 0, i32 6\l  store i32 %add, i32* %desc5, align 4\l  br label %for.inc\l}"];
	Node0x4664210 -> Node0x4664270;
	Node0x4664270 [shape=record,label="{for.inc:                                          \l  %15 = load %struct.rb_node** %n, align 8\l  %call6 = call %struct.rb_node* @rb_next(%struct.rb_node* %15)\l  store %struct.rb_node* %call6, %struct.rb_node** %n, align 8\l  br label %for.cond\l}"];
	Node0x4664270 -> Node0x46640f0;
	Node0x46642d0 [shape=record,label="{for.end:                                          \l  %16 = load %struct.binder_ref** %new_ref, align 8\l  ret %struct.binder_ref* %16\l}"];
}
